{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.translate.factory.ts","webpack:///src/app/appcore/models/comment.model.ts","webpack:///src/app/appcore/models/dislike.model.ts","webpack:///src/app/appcore/models/like.model.ts","webpack:///src/app/appcore/modules/appcore.module.ts","webpack:///src/app/appcore/modules/material.module.ts","webpack:///src/app/blogs/blog-detail/blog-detail.component.ts","webpack:///src/app/blogs/blog-detail/blog-detail.component.html","webpack:///src/app/blogs/blog-list/blog-list.component.ts","webpack:///src/app/blogs/blog-list/blog-list.component.html","webpack:///src/app/blogs/blogs.module.ts","webpack:///src/app/blogs/create-blog/create-blog.component.ts","webpack:///src/app/blogs/create-blog/create-blog.component.html","webpack:///src/app/config/app.config.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/error404/error-404.component.ts","webpack:///src/app/core/error404/error-404.component.html","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/logger.service.ts","webpack:///src/app/core/module-import-guard.ts","webpack:///src/app/core/nav/nav.component.ts","webpack:///src/app/core/nav/nav.component.html","webpack:///src/app/core/progressbar/progressbar.component.ts","webpack:///src/app/core/progressbar/progressbar.component.html","webpack:///src/app/core/search-bar/search-bar.component.ts","webpack:///src/app/core/search-bar/search-bar.component.html","webpack:///src/app/event/event.component.ts","webpack:///src/app/event/event.component.html","webpack:///src/app/feedback/feedback.component.ts","webpack:///src/app/feedback/feedback.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login/login.component.ts","webpack:///src/app/login/login/login.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/recepies/create-recepie/create-recepie.component.ts","webpack:///src/app/recepies/create-recepie/create-recepie.component.html","webpack:///src/app/recepies/recepie-detail/recepie-detail.component.ts","webpack:///src/app/recepies/recepie-detail/recepie-detail.component.html","webpack:///src/app/recepies/recepies/recepies.component.ts","webpack:///src/app/recepies/recepies/recepies.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/alert.service.ts","webpack:///src/app/services/blogs.service.ts","webpack:///src/app/services/communicator.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/feedback.service.ts","webpack:///src/app/services/news.service.ts","webpack:///src/app/services/recepies.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/setting/setting.component.ts","webpack:///src/app/setting/setting.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","translateService","title","meta","snackBar","router","mediaObserver","setDefaultLang","use","setTitle","events","subscribe","event","urlAfterRedirects","updateTag","name","content","mediaSubscription","media$","change","completeDeviceSize","mqAlias","mediaQuery","deviceSize","substr","console","log","unsubscribe","AppModule","provide","useValue","loader","useFactory","deps","declarations","providers","bootstrap","HttpLoaderFactory","http","Comment","Dislike","dislikes","message","Like","likes","AppcoreModule","ngModule","MaterialModule","BlogDetailComponent","route","blogService","alertService","storageService","panelOpenState","isliked","isDisliked","months","value","viewValue","blogDetail","getBlogById","blogId","snapshot","paramMap","get","res","blog","getCommentsByBlogId","response","comments","commentsCount","length","like","_id","blogLikes","showToaster","dislike","blogDislikes","userComment","comment","commentText","user","commentAuthor","firstName","lastName","addCommentOnBlog","BlogListComponent","blogCount","pageIndex","pageSize","pageSizeOptions","getAllBlogs","getAllblogs","blogList","blogs","error","navigate","$event","startIndex","endIndex","previousPageIndex","slice","paginator","BlogsModule","entryComponents","CreateBlogComponent","blogsService","formBuilder","imageSrc","model","blogName","blogState","blogImage","blogCategory","blogContent","blogTags","blogTemplate","categories","templates","createBlog","group","required","newBlog","blogAuthor","status","file","dataTransfer","files","target","pattern","reader","FileReader","type","match","alert","onload","_handleReaderLoaded","bind","readAsDataURL","result","createNewBlog","handleInputChange","publishBlog","ngForm","APP_CONFIG","baseDomain","AppConfig","appRestPoints","users","recepies","images","login","register","feedbacks","news","newsapi","snackBarDuration","repositoryURL","CoreModule","parentModule","Error404Component","FooterComponent","version","currentLang","LoggerService","msg","obj","throwIfAlreadyLoaded","moduleName","NavComponent","appConfig","communicatorService","USER_DATA","USER_TOKEN","profilePhoto","loadMenus","loadNavigationMenus","isLoggedIn","language","texts","menuItems","link","navItems","remove","next","ProgressbarComponent","SearchBarComponent","EventComponent","eventService","eventRegisterationForm","getAllEvents","eventImage","createMyEvent","getAllMyEvents","eventList","eventId","registerEvent","FeedbackComponent","feedBackService","newFeedbackForm","getAllFeedbacks","newFeedback","sendFeedback","feedback","HomeComponent","userService","LoginComponent","loading","canVote","newLoginForm","username","password","data","json","set","token","auth","NewsComponent","newsService","news_categories","newsources","countries","selectedCountry","selectedCategory","selectedSource","selectedCntry","selectedCat","getAllNews","err","selected","getAllNewsBySource","ProfileComponent","updatedImage","sharePhoto","uploadImage","CreateRecepieComponent","recepieService","recepieName","recepieState","recepieImage","recepieCategory","recepieContent","recepieTags","createRecepie","newRecepie","recepieAuthor","addRecepie","createNewRecepie","publishRecepie","RecepieDetailComponent","recepieDetail","getRecepieById","recepie","RecepiesComponent","recepieCount","getAllRecepies","recepieList","recepieId","RegisterComponent","translator","isCreated","newRegisterForm","confirmpassword","contact","email","invalid","create","registerUser","AlertService","horizontalPosition","verticalPosition","open","duration","BlogsService","headers","Response","pipe","isLiked","post","JSON","stringify","handleError","disLiked","isDisLiked","showSnackBar","config","translations","CommunicatorService","EventService","MyEventId","eventName","eventDescription","eventLocation","eventOrganizer","eventStartDate","eventEndDate","eventLikes","eventDislikes","FeedbackService","feedbackId","senderName","senderEmail","senderFeedback","NewsService","newsUrl","country","category","newsUpdated","articles","source","RecepiesService","recepieViews","recepieLikes","recepieDislikes","UserService","user_key","put","SettingComponent","settings","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","\n<div class=\"form-container\">\n  <mat-card>\n    <img mat-card-image src=\"assets/images/developer/pranaysmokal.png\" style=\"height:300px;\"/>\n    <mat-card-header>\n      <mat-card-title>\n        Pranay Sanjay Mokal, Technical Lead\n      </mat-card-title>\n      <br/>\n    </mat-card-header>\n    <p style=\"margin-bottom: 20px;margin-left: 10px;margin-top: 20px;\">\n      I am a Full stack developer with over 6 years of experience in Web app development.\n      I work as a Java developer and so far I have been worked with various technologies and frameworks like Spring boot, Spring MVC, JAX-RS REST Services, Spring REST Services,\n      Android, JPA, Hibernate, Spring JDBC Template along with varity of database such as MS SQL, MySQL, Oracle, MongoDB and SQLite.\n      I have diverse experiance in domains such as Healthcare, Storage, Insurance, egovernance.\n    </p>\n    <mat-card-content>\n      <hr>\n      <p style=\"margin-top: 20px;margin-left: 10px;\">\n        Developing project is my hobby and this is totally free of cost project developed by me with help of github pages\n        and heroko for NodeJs app deployment, Angular 10, Angular Material 10, Node js, Express and Mongo DB.\n        Objective behind this project is to encourage people to share them knowledge they have and to help or guide the\n        other people to know the new things.\n        You can also visit my work in progress websites Angular 8- https://vedichealer.github.io and static BootStrap website- https://svssai.github.io\n        Due to busy schedule sometime I give them time on week ends in round robin fasion.\n      </p>\n      <hr>\n    </mat-card-content>\n    <mat-card-actions>\n      <a href=\"mailto:pranay.mokal@gmail.com\"><button mat-raised-button>\n          {{ \"email\" | translate }}\n        </button></a>\n      <button routerLink=\"/feedback\" mat-raised-button>\n        {{ \"feedback\" | translate }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { AboutComponent } from './about/about.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { Error404Component } from './core/error404/error-404.component';\nimport { BlogDetailComponent } from './blogs/blog-detail/blog-detail.component';\nimport { BlogListComponent } from './blogs/blog-list/blog-list.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NewsComponent } from './news/news.component';\nimport { CreateBlogComponent } from './blogs/create-blog/create-blog.component';\nimport { EventComponent } from './event/event.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { RecepiesComponent } from './recepies/recepies/recepies.component';\nimport { CreateRecepieComponent } from './recepies/create-recepie/create-recepie.component';\nimport { RecepieDetailComponent } from './recepies/recepie-detail/recepie-detail.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: RegisterComponent },\n  { path: 'blog-list', component: BlogListComponent },\n  { path: 'createblog', component: CreateBlogComponent },\n  { path: 'blog/:id', component: BlogDetailComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'news', component: NewsComponent },\n  { path: 'event', component: EventComponent },\n  { path: 'setting', component: SettingComponent },\n  { path: 'recepies', component: RecepiesComponent },\n  { path: 'addrecepie', component: CreateRecepieComponent },\n  { path: 'recepie/:id', component: RecepieDetailComponent },\n  { path: '404', component: Error404Component },\n  { path: 'feedback', component: FeedbackComponent },\n  { path: '**', redirectTo: '/' + '404' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy{\n\n  completeDeviceSize: string;\n  deviceSize: string;\n  mediaSubscription: Subscription;\n\n  constructor(private translateService: TranslateService,\n    private title: Title,\n    private meta: Meta,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    public mediaObserver: MediaObserver) {\n\n    this.translateService = translateService;\n    this.translateService.setDefaultLang('en');\n    this.translateService.use('en');\n\n    this.title.setTitle('Angular10-The WriterHub by Pranay Sanjay Mokal');\n    this.router.events.subscribe((event: any) => {\n      if (event instanceof NavigationEnd) {\n        switch (event.urlAfterRedirects) {\n          case '/':\n            this.meta.updateTag({\n              name: 'description',\n              content: 'Angular 10 FullStack WriterHub app by Pranay Sanjay Mokal with Angular Material 10 and NodeJS, MongoDB'\n            });\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n\n    this.mediaSubscription = this.mediaObserver.media$.subscribe((change: MediaChange) => {\n      this.completeDeviceSize  = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n      this.deviceSize = this.completeDeviceSize.substr(1, 2);\n      console.log(this.deviceSize);\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n}\n","<app-nav [deviceSize]=\"deviceSize\"></app-nav>","import { RegisterComponent } from './register/register.component';\nimport { UserService } from './services/user.service';\nimport { HttpModule, BaseRequestOptions, Http } from '@angular/http';\nimport { LoginComponent } from './login/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { APP_CONFIG, AppConfig } from './config/app.config';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppcoreModule } from './appcore/modules/appcore.module';\nimport { CoreModule } from './core/core.module';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpLoaderFactory } from './app.translate.factory';\nimport { AboutComponent } from './about/about.component';\nimport { AlertService } from './services/alert.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewsService } from './services/news.service';\nimport { BlogsService } from './services/blogs.service';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { EventComponent } from './event/event.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { StorageServiceModule } from 'ngx-webstorage-service';\nimport { BlogsModule } from './blogs/blogs.module';\nimport { EventService } from './services/event.service';\nimport { RecepiesComponent } from './recepies/recepies/recepies.component';\nimport { DatePipe } from '@angular/common';\nimport { CreateRecepieComponent } from './recepies/create-recepie/create-recepie.component';\nimport { RecepiesService } from './services/recepies.service';\nimport { RecepieDetailComponent } from './recepies/recepie-detail/recepie-detail.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { FeedbackService } from './services/feedback.service';\nimport { CommunicatorService } from './services/communicator.service';\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    AppcoreModule.forRoot(),\n    CoreModule,\n    StorageServiceModule,\n    AppRoutingModule,\n    BlogsModule,\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    NewsComponent,\n    EventComponent,\n    SettingComponent,\n    RecepiesComponent,\n    CreateRecepieComponent,\n    RecepieDetailComponent,\n    FeedbackComponent\n  ],\n  providers: [\n    { provide: APP_CONFIG, useValue: AppConfig }, DatePipe,\n    UserService, AlertService, BaseRequestOptions, NewsService, BlogsService, EventService,\n    RecepiesService, FeedbackService, CommunicatorService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient} from '@angular/common/http';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","export class Comment {\ncommentText:string;\ncommentAuthor:string;\ncommentlikes:string;\ncommentDislikes:string;\ncommentAdded:string;\nblogId:string;\neventId:string;\nuserId:string;\nrecepieId:string;\ncommentUpdated:string;\n}","export class Dislike{\n    dislikes : number;\n    message : string;\n\n    constructor(dislikes:number, message:string){\n        this.dislikes=dislikes;\n        this.message=message;\n      }\n}","export class Like{\nlikes : number;\nmessage : string;\n\nconstructor(likes:number, message:string){\n    this.likes=likes;\n    this.message=message;\n  }\n}","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MaterialModule } from './material.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    MaterialModule,\n    FlexLayoutModule,\n    TranslateModule,\n  ],\n  exports: [\n    MaterialModule,\n    FlexLayoutModule,\n    TranslateModule,\n  ]\n})\n\nexport class AppcoreModule {\n  static forRoot(): ModuleWithProviders <AppcoreModule>{\n    return {\n      ngModule: AppcoreModule,\n      providers: [\n      ]\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatCardModule,\n    MatSliderModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatListModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatCardModule,\n    MatSliderModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatListModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule\n  ],\n})\n\nexport class MaterialModule {\n}\n","import { User } from './../../appcore/models/user.model';\nimport { AlertService } from './../../services/alert.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Blog } from '../../appcore/models/blog.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Comment } from '../../appcore/models/comment.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\n\n@Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})\nexport class BlogDetailComponent implements OnInit {\n  panelOpenState = false;\n  blog: Blog;\n  blogId: string;\n  isliked: boolean = false;\n  isDisliked: boolean = false;\n  comments: Comment[];\n  commentsCount: number;\n  userComment: string;\n  months = [\n    { value: 'JAN', viewValue: 'January' },\n    { value: 'FEB', viewValue: 'February' },\n    { value: 'MAR', viewValue: 'March' },\n    { value: 'APR', viewValue: 'April' },\n    { value: 'MAY', viewValue: 'May' },\n    { value: 'JUN', viewValue: 'June' },\n    { value: 'JUL', viewValue: 'July' },\n    { value: 'AUG', viewValue: 'August' },\n    { value: 'SEP', viewValue: 'September' },\n    { value: 'OCT', viewValue: 'October' },\n    { value: 'NOV', viewValue: 'November' },\n    { value: 'DEC', viewValue: 'December' }\n  ];\n  user: User;\n\n  constructor(\n    private route: ActivatedRoute,\n    private blogService: BlogsService,\n    private alertService: AlertService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n  ) { }\n\n  ngOnInit() {\n    const blogDetail = this.blogService.getBlogById(\n      this.blogId = this.route.snapshot.paramMap.get('id')\n    );\n    blogDetail.subscribe(res => {\n      this.blog = res;\n    });\n    this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n      this.comments = response;\n      this.commentsCount = this.comments.length;\n    });\n  }\n\n  like() {\n    if (this.isliked) {\n      this.blogService.like(this.blog._id, false).subscribe(response => {\n        if (response.message === 'please sign in to like') {\n          return;\n        } else {\n          this.blog.blogLikes = response.likes;\n        }\n        this.isliked = false;\n      });\n    } else {\n      this.blogService.like(this.blog._id, true).subscribe(response => {\n        this.alertService.showToaster(response.message);\n        if (response.message === 'please sign in to like') {\n          return;\n        } else {\n          this.blog.blogLikes = response.likes;\n        }\n        this.isliked = true;\n      });\n    }\n  }\n\n  dislike() {\n    if (this.isDisliked) {\n      this.blogService.dislike(this.blog._id, false).subscribe(response => {\n        if (response.message === 'please sign in to Dislike') {\n          return;\n        } else {\n          this.blog.blogDislikes = response.dislikes;\n        }\n        this.isDisliked = false;\n      });\n    } else {\n      this.blogService.dislike(this.blog._id, true).subscribe(response => {\n        this.alertService.showToaster(response.message);\n        if (response.message === 'please sign in to Dislike') {\n          return;\n        } else{\n          this.blog.blogDislikes = response.dislikes;\n        }\n        this.isDisliked = true;\n      });\n    }\n  }\n\n  setLikeStyle() {\n    if (this.isliked)\n      return 'button-liked';\n    else\n      return 'button-notliked';\n  }\n\n  setDisLikeStyle() {\n    if (this.isDisliked)\n      return 'button-liked';\n    else\n      return 'button-notliked';\n  }\n\n  addUserComment() {\n    console.log(this.userComment);\n    if (!this.userComment) {\n      this.alertService.showToaster(\"Add Comment before Proceed.\");\n      return;\n    }\n    let comment = new Comment();\n    comment.blogId = this.blogId;\n    comment.commentText = this.userComment;\n    this.user = this.storageService.get('USER_DATA');\n    if (!this.user) {\n      this.alertService.showToaster(\"Sign In to Continue\");\n      return;\n    }\n    comment.commentAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.blogService.addCommentOnBlog(comment).subscribe(response => {\n      this.alertService.showToaster(\"Your comment has been added\");\n      this.userComment = '';\n      this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n        this.comments = response;\n        this.commentsCount = this.comments.length;\n      });\n    });\n    this.userComment = '';\n    this.alertService.showToaster(\"Your comment has been added\");\n    this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n      this.comments = response;\n      this.commentsCount = this.comments.length;\n    });\n  }\n}\n","<div fxLayout=\"column wrap\" fxLayoutAlign=\"start\" fxFlex=\"100\" flex-wrap=\"nowrap\" *ngIf=\"blog\">\n  <mat-card>\n    <mat-card-header fxLayout=\"row\">\n      <img class=\"mat-card-mat-image\" src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50 \"\n        style=\"border-radius: 50%;\">\n      <div class=\"header-actions\" style=\"margin-left: 20px\">\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>{{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{blog.blogCreated | date}}</mat-card-subtitle>\n      </div>\n      <div fxFlex></div>\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item>Share</button>\n        <button mat-menu-item>Hide</button>\n        <button mat-menu-item>Rate</button>\n      </mat-menu>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </mat-card-header>\n    <img src=\"{{blog.blogImage}}\" class=\"center\" height=\"350\" width=\"350\" style=\"margin-bottom: 20px;\">\n    <mat-card-content>\n      <pre class=\"preclass\" style=\"text-justify: inter-word;margin-top: 40px;font-size:18px;\">\n           {{blog.blogContent}} </pre>\n    </mat-card-content>\n    <mat-card-footer>\n      <button [ngClass]=\"setLikeStyle()\" mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\"\n        matBadgeColor=\"primary\" (click)=\"like()\">\n        <mat-icon>thumb_up</mat-icon>Like\n      </button>\n      <button [ngClass]=\"setDisLikeStyle()\" mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\"\n        matBadgeColor=\"warn\" (click)=\"dislike()\">\n        <mat-icon>thumb_down</mat-icon>Dislike\n      </button>\n      <button class=\"mat-icon-button\" aria-label=\"toggle \">\n        <mat-icon mat-svg-icon=\"mat-toggle-arrow \"></mat-icon>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n      </button>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <span matBadge=\"{{commentsCount}}\" matBadgePosition=\"after above\" matBadgeColor=\"primary\"\n              matBadgeOverlap=\"false\" style=\"margin-top: 13px;margin-bottom: 10px;\">Comments</span>\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"example-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Leave a comment\" [(ngModel)]=\"userComment\"></textarea>\n          </mat-form-field>\n          <button mat-raised-button color=\"primary\" style=\"width: 100px;margin-bottom: 10px;\"\n            (click)=\"addUserComment()\">Comment</button>\n        </div>\n        <mat-list>\n          <mat-divider></mat-divider>\n          <mat-list-item *ngFor=\"let comment of comments\">\n            <mat-icon matListIcon style=\"font-size: 40px;margin-bottom: 20px;margin-right: 10px;\">account_circle\n            </mat-icon>\n            <span>\n              <h4 matLine style=\"margin-left: 15px;margin-top: 15px;font-size: 18px;\"> {{ comment.commentAuthor }} </h4>\n              <p matLine style=\"word-break: break-all; margin-left: 15px;margin-bottom: 5px;\">\n                {{comment.commentText}}\n              </p>\n            </span>\n            <mat-divider></mat-divider>\n          </mat-list-item>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Blog } from '../../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n  blogs: Blog[];\n  blogCount: Number = 0;\n  length = 0;\n  pageIndex = 0;\n  pageSize = 6;\n  pageEvent: PageEvent;\n  pageSizeOptions: number[] = [6, 12, 18, 24, 30];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private blogService: BlogsService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.getAllBlogs();\n  }\n\n  ngOnInit() { }\n\n  getAllBlogs(): void {\n    this.blogService.getAllblogs().subscribe(\n      blogList => {\n        this.blogCount = blogList.length;\n        this.blogs = blogList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readBlog(blogId: string) {\n    this.router.navigate(['/blog/' + blogId]);\n  }\n\n  pageChange($event) {\n    const startIndex = $event.pageIndex * $event.pageSize;\n    let endIndex = 0;\n    if ($event.previousPageIndex < $event.pageIndex) {\n      endIndex = $event.pageSize + $event.pageSize;\n    } else {\n      endIndex = $event.pageSize;\n    }\n    this.blogs = this.blogs.slice(startIndex, endIndex);\n  }\n}\n","<img src=\"assets/images/blogwall.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\" />\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"flex-start\">\n  <ng-container *ngFor=\"let blog of blogs\">\n    <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\"\n      style=\"margin-bottom: 20px;\">\n      <mat-card-header fxLayout=\"row\" style=\"margin-bottom:20px;\">\n        <div mat-card-avatar>\n          <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius: 50%;\" />\n        </div>\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>Author : {{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{ blog.blogCreated | date }} <mat-chip color=\"primary\" selected>{{blog.blogCategory}}\n          </mat-chip>\n        </mat-card-subtitle>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n          <button mat-menu-item>Rate</button>\n        </mat-menu>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n\n      </mat-card-header>\n      <img class=\"mat-card-image\" src=\"{{blog.blogImage}}\" height=\"200\" />\n\n      <mat-card-content style=\"height: 60px;overflow: hidden;\">\n        <p>{{ blog.blogContent }}</p>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        <button mat-button (click)=\"readBlog(blog._id)\">Read More..</button>\n      </mat-card-footer>\n    </mat-card>\n  </ng-container>\n</div>\n\n<mat-paginator *ngIf=\"blogs\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"pageChange($event)\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppcoreModule } from '../appcore/modules/appcore.module';\nimport { BlogsService } from './../services/blogs.service';\nimport { BlogDetailComponent } from './blog-detail/blog-detail.component';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport { CreateBlogComponent } from './create-blog/create-blog.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AppcoreModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    BlogDetailComponent,\n    BlogListComponent,\n    CreateBlogComponent\n  ],\n  entryComponents: [\n  ],\n  providers: [\n    BlogsService\n  ]\n})\n\nexport class BlogsModule {\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Router } from '@angular/router';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject } from '@angular/core';\nimport { User } from '../../appcore/models/user.model';\n\n@Component({\n  selector: 'app-create-blog',\n  templateUrl: './create-blog.component.html',\n  styleUrls: ['./create-blog.component.css']\n})\nexport class CreateBlogComponent {\n  createBlog: FormGroup;\n  @ViewChild('form') ngForm;\n  error: string;\n  imageSrc = '';\n  user: User;\n  model = {\n    blogName: '',\n    blogState: '',\n    blogImage: '',\n    blogCategory: '',\n    blogContent: '',\n    blogTags: '',\n    blogTemplate: ''\n  };\n\n  categories = [\n    { value: 'education', viewValue: 'Education' },\n    { value: 'history', viewValue: 'History' },\n    { value: 'science', viewValue: 'Science' },\n    { value: 'economic', viewValue: 'Economics' },\n    { value: 'health', viewValue: 'Health' },\n    { value: 'news', viewValue: 'News' },\n    { value: 'entertainment', viewValue: 'Entertainment' },\n    { value: 'other', viewValue: 'Other' }\n  ];\n  templates = [\n    { value: 'select', viewValue: 'Select' },\n    { value: 'grid', viewValue: 'Grid Template' },\n    { value: 'side', viewValue: 'Side Template' },\n    { value: 'expandable', viewValue: 'Expandable Template' }\n  ];\n\n  constructor(private blogsService: BlogsService,\n    private formBuilder: FormBuilder, private router: Router, @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.createBlog = this.formBuilder.group({\n      'blogName': ['', [Validators.required]],\n      'blogContent': ['', [Validators.required]],\n      'blogTemplate': ['', [Validators.required]],\n      'blogTags': ['', Validators.required],\n      'blogCategory': ['', Validators.required],\n      'blogImage': [''],\n    });\n  }\n\n  createNewBlog(newBlog) {\n    newBlog.blogImage = this.imageSrc;\n    newBlog.blogState = 'created';\n    this.user = this.storageService.get('USER_DATA');\n    newBlog.blogAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.blogsService.createBlog(newBlog).subscribe((blogs) => {\n      this.router.navigate(['/blog-list']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/blog-list']);\n      }\n    });\n  }\n\n  publishBlog(model) {\n    model.blogImage = this.imageSrc;\n    model.blogState = 'published';\n    this.blogsService.createBlog(model).subscribe((blogs) => {\n      this.router.navigate(['/blog-list']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/blog-list']);\n      }\n    });\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<div class=\"form-container\">\n  <mat-toolbar color=\"primary\">\n    <h1>{{ \"createblog\" | translate }}</h1>\n  </mat-toolbar>\n  <mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"createBlog\" #form=\"ngForm\" (ngSubmit)=\"createNewBlog(createBlog.value)\">\n        <mat-form-field class=\"input-field\">\n          <input matInput class=\"form-control\" placeholder=\"{{'blogname' | translate}}\" formControlName=\"blogName\"\n            [(ngModel)]=\"model.blogName\" />\n        </mat-form-field>\n        <mat-form-field class=\"input-field\">\n          <mat-select placeholder=\"Blog categories\" placeholder=\"{{'blogcategories' | translate}}\"\n            formControlName=\"blogCategory\" [(ngModel)]=\"model.blogCategory\">\n            <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.value\">\n              {{ cat.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"input-field\">\n          <textarea matInput class=\"form-control\" placeholder=\"{{'writebloghere' | translate}}\"\n            formControlName=\"blogContent\" rows=\"20\" [(ngModel)]=\"model.blogContent\"></textarea>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-field\">\n          <input matInput placeholder=\"Add Tags\" formControlName=\"blogTags\" [(ngModel)]=\"model.blogTags\" />\n        </mat-form-field>\n\n        <div>\n          <img [src]=\"imageSrc\" style=\"max-width:300px;max-height:300px\" />\n          <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\"\n            formControlName=\"blogImage\" />\n        </div>\n\n        <mat-card-actions>\n          <button type=\"submit\" mat-raised-button>{{ \"createblog\" | translate }}</button>\n          <button mat-raised-button (click)='publishBlog(model)'>{{ \"publishblog\" | translate }}</button>\n        </mat-card-actions>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>","import { InjectionToken } from '@angular/core';\n\nimport { IAppConfig } from './iapp.config';\n\nexport let APP_CONFIG = new InjectionToken('app.config');\n\nconst baseDomain = 'https://writinghub.herokuapp.com';\n//const baseDomain = 'http://localhost:3000';\n\nexport const AppConfig: IAppConfig = {\n  appRestPoints: {\n    blogs: baseDomain + '/api/v1/blogs',\n    users: baseDomain + '/api/v1/users',\n    events: baseDomain + '/api/v1/events',\n    recepies: baseDomain + '/api/v1/recepies',\n    comments: baseDomain + '/api/v1/comments',\n    images: baseDomain + '/api/v1/images',\n    login: baseDomain + '/api/v1/auth/login',\n    register: baseDomain + '/api/v1/auth/register',\n    feedbacks: baseDomain + '/api/v1/feedbacks',\n    news: 'https://newsapi.org/v2/top-headlines?country=',\n    newsapi: '&apiKey=3e49887986274a71b3aecae7a3830f90'\n  },\n  snackBarDuration: 3000,\n  repositoryURL: 'https://github.com/pranaymokal/WriterHub2.0.git'\n};\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport { LoggerService } from './logger.service';\n\nimport { NavComponent } from './nav/nav.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppcoreModule } from '../appcore/modules/appcore.module';\nimport { RouterModule } from '@angular/router';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { Error404Component } from './error404/error-404.component';\nimport { ProgressbarComponent } from './progressbar/progressbar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    AppcoreModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    NavComponent,\n    FooterComponent\n  ],\n  declarations: [\n    NavComponent,\n    FooterComponent,\n    SearchBarComponent,\n    Error404Component,\n    ProgressbarComponent\n  ],\n  providers: [\n    LoggerService,\n  ]\n})\n\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error-404',\n  templateUrl: './error-404.component.html',\n  styleUrls: ['./error-404.component.css']\n})\n\nexport class Error404Component {\n  constructor() {\n  }\n}\n","<!-- <h3 class=\"section-title\"><strong>404</strong></h3>\n<h1 class=\"section-title\">{{'error404' | translate}}</h1>\n<p class=\"explanation\">{{'pagenotfound' | translate}}</p> -->\n\n<div class=\"form-container\">\n  <mat-toolbar color=\"primary\">\n        <h3>We Couldn't Find This Page </h3>\n  </mat-toolbar>\n  <mat-card>\n      <mat-card-content >\n        <h1  style=\"color:#5714ce\" class=\"mat-display-2\" >Page not found </h1>\n        <h2  style=\"text-align:center;color:#5714ce\" class=\"mat-display-4\">404</h2>\n      </mat-card-content>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { version } from '../../../../package.json';\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\n\nexport class FooterComponent {\n  currentLang: string;\n  public version: string = version;\n\n  constructor(private translateService: TranslateService) {\n    this.currentLang = this.translateService.currentLang;\n  }\n}\n","<footer>\n    <div fxFlex fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center center\" class.xs=\"footer-xs\">\n        <span> © {{ 'writerhub' | translate }} 2021, </span>\n        <span> &nbsp; {{ 'appdeveloper' | translate }} :\n            <a style=\"color:aliceblue;\" href=\"mailto:pranay.mokal@gmail.com\">{{ 'pranaymokal' | translate }},</a></span>\n        <span> &nbsp; App version : {{version}}, Last Updated 18-07-2021. </span>\n    </div>\n</footer>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n  static log(msg: string): void {\n    //console.log(msg);\n  }\n\n  static error(msg: string, obj = {}): void {\n    //console.error(msg, obj);\n  }\n}\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { TranslateService } from '@ngx-translate/core';\nimport { APP_CONFIG } from '../../config/app.config';\nimport { IAppConfig } from '../../config/iapp.config';\nimport { Component, Inject, OnInit, Input } from '@angular/core';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Router } from '@angular/router';\nimport { User } from '../../appcore/models/user.model';\nimport { CommunicatorService } from '../../services/communicator.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  appConfig: any;\n  menuItems: any[];\n  progressBarMode: string;\n  currentLang: string;\n  apptitle: string;\n  USER_DATA = 'USER_DATA';\n  USER_TOKEN = 'USER_TOKEN';\n  isLoggedIn: boolean;\n  user: User;\n  navItems: any[];\n  profilePhoto = '/assets/images/default.png';\n  @Input() deviceSize : string;\n\n  constructor(\n    @Inject(APP_CONFIG) appConfig: IAppConfig,\n    private translateService: TranslateService,\n    private router: Router,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private communicatorService: CommunicatorService\n  ) {\n    this.appConfig = appConfig;\n    this.translateService = translateService;\n    this.loadMenus();\n    this.loadNavigationMenus();\n    this.currentLang = this.translateService.currentLang;\n    this.user = this.storageService.get(this.USER_DATA);\n    this.communicatorService.isLoggedIn.subscribe(value => {\n      this.isLoggedIn = value;\n      this.user = this.storageService.get(this.USER_DATA);\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"nav device size\",this.deviceSize)\n  }\n\n  changeLanguage(language: string): void {\n    this.translateService.use(language).subscribe(() => {\n      this.loadMenus();\n      this.loadNavigationMenus();\n    });\n  }\n\n  private loadMenus(): void {\n    this.translateService\n      .get(['about', 'blogs', 'recepies'], {})\n      .subscribe((texts: any) => {\n        this.menuItems = [\n          { link: '/blog-list', name: texts['blogs'] },\n          { link: '/recepies', name: texts['recepies'] },\n          { link: '/about', name: texts['about'] }\n        ];\n      });\n  }\n\n  private loadNavigationMenus(): void {\n    this.translateService\n      .get(\n        [\n          'blogs',\n          'recepies',\n          'feedback'\n        ],\n        {}\n      )\n      .subscribe((texts: any) => {\n        this.navItems = [\n          { link: '/blog-list', name: texts['blogs'] },\n          { link: '/recepies', name: texts['recepies'] },\n          { link: '/feedback', name: texts['feedback'] },\n        ];\n      });\n  }\n\n  logout() {\n    this.storageService.remove(this.USER_TOKEN);\n    this.storageService.remove(this.USER_DATA);\n    this.communicatorService.isLoggedIn.next(false);\n    this.router.navigate(['']);\n  }\n}\n","<mat-sidenav-container fullscreen>\n  <mat-sidenav #start over>\n    <mat-list>\n      <div>\n        <mat-card *ngIf=\"user\">\n          <mat-divider [vertical]=\"true\" [inset]=\"true\"></mat-divider>\n          <img src=\"{{profilePhoto}}\" style=\"border-radius: 40%;\" width=\"200\" />\n          <mat-card-title-group>\n            <mat-card-title>{{user.firstName + \" \" + user.lastName }}</mat-card-title>\n            <mat-card-subtitle>{{user.username}}</mat-card-subtitle>\n          </mat-card-title-group>\n        </mat-card>\n      </div>\n      <mat-nav-list>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/setting\" *ngIf=\"isLoggedIn\">\n          {{ \"settings\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/profile\" *ngIf=\"isLoggedIn\">\n          {{ \"profile\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/createblog\" *ngIf=\"isLoggedIn\">\n          {{ \"createblog\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/addrecepie\" *ngIf=\"isLoggedIn\">\n          {{ \"addrecepie\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/blog-list\" *ngIf=\"isLoggedIn\">\n          {{ \"myblogs\" | translate }} </a>\n\n        <a *ngFor=\"let navItem of navItems\" mat-list-item (click)=\"start.close()\" routerLinkActive\n          #routerLinkActiveInstance=\"routerLinkActive\" [attr.tabindex]=\"routerLinkActiveInstance.isActive ? 0 : -1\"\n          [routerLink]=\"[navItem.link]\">\n          {{ navItem.name }}\n        </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/login\" *ngIf=\"!isLoggedIn\">\n          {{ \"signin\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/about\" *ngIf=\"!isLoggedIn\">\n          {{ \"about\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\"> {{ \"close\" | translate }} </a>\n      </mat-nav-list>\n    </mat-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n\n    <mat-toolbar color=\"primary\" class=\"sticky\">\n      <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n        <div fxLayout=\"row\">\n          <button mat-button (click)=\"start.open('mouse')\">\n            <mat-icon>menu</mat-icon>\n          </button>\n          <button mat-button routerLink=\"\">\n            <span class=\"logo\"> {{ \"writerhub\" | translate }} </span>\n          </button>\n          <div *ngIf=\"deviceSize !=='xs'\" fxLayout=\"row\">\n            <a mat-button *ngFor=\"let item of menuItems\" routerLink=\"{{ item.link }}\">\n              {{ item.name }}\n            </a>\n            <button mat-button [matMenuTriggerFor]=\"menu\">\n              {{ \"more\" | translate }}\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button routerLink=\"/feedback\" mat-menu-item>{{\"feedback\"  | translate }}</button>\n            </mat-menu>\n          </div>\n        </div>\n        <div fxLayout=\"row\">\n          <div *ngIf=\"deviceSize ==='xs'\">\n            <button mat-button [matMenuTriggerFor]=\"matmenu\" style=\"margin-left: 5px\">\n              Language\n            </button>\n            <mat-menu #matmenu=\"matMenu\">\n              <button mat-menu-item (click)=\"changeLanguage('en')\">\n                <span> English </span>\n              </button>\n              <button mat-menu-item (click)=\"changeLanguage('mh')\">\n                <span> मराठी </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuaccount\" *ngIf=\"isLoggedIn\">\n              <mat-icon>account_circle</mat-icon>\n            </button>\n            <mat-menu #menuaccount=\"matMenu\">\n              <button mat-menu-item  routerLink=\"/profile\" routerLinkActive=\"router-link-active\" ><span> {{ \"myaccount\" | translate }} </span></button>\n              <button mat-menu-item routerLink=\"/setting\">\n                <span> {{ \"settings\" | translate }} </span>\n              </button>\n              <button mat-menu-item (click)=\"logout()\">\n                <span> {{ \"logout\" | translate }} </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"signinmenu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n          </div>\n          <div *ngIf=\"!(deviceSize ==='xs')\" fxLayoutAlign=\"end\">\n            <button mat-button [matMenuTriggerFor]=\"matmenu\" style=\"margin-left: 5px\">\n              Language\n            </button>\n            <mat-menu #matmenu=\"matMenu\">\n              <button mat-menu-item (click)=\"changeLanguage('en')\">\n                <span> English </span>\n              </button>\n              <button mat-menu-item (click)=\"changeLanguage('mh')\">\n                <span> मराठी </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuaccount\" *ngIf=\"isLoggedIn\">\n              <mat-icon>account_circle</mat-icon>\n            </button>\n            <mat-menu #menuaccount=\"matMenu\">\n              <button mat-menu-item routerLink=\"/profile\"><span> {{ \"myaccount\" | translate }} </span></button>\n              <button mat-menu-item routerLink=\"/setting\">\n                <span> {{ \"settings\" | translate }} </span>\n              </button>\n              <button mat-menu-item (click)=\"logout()\">\n                <span> {{ \"logout\" | translate }} </span>\n              </button>\n            </mat-menu>\n            <a [routerLink]=\"['/login']\" mat-button *ngIf=\"!isLoggedIn\">\n              {{ \"signin\" | translate }}\n            </a>\n          </div>\n        </div>\n      </mat-toolbar-row>\n\n      <mat-toolbar-row *ngIf=\"(deviceSize ==='xs')\" fxLayoutAlign=\"left\">\n        <a mat-button *ngFor=\"let item of menuItems\" routerLink=\"{{ item.link }}\">\n          {{ item.name }}\n        </a>\n        <a mat-button [matMenuTriggerFor]=\"menu\">\n          {{ \"more\" | translate }}\n        </a>\n        <mat-menu #menu=\"matMenu\">\n          <button routerLink=\"/feedback\" mat-menu-item>{{\"feedback\"  | translate }}</button>\n        </mat-menu>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <mat-menu #signinmenu=\"matMenu\" fxLayoutAlign=\"end\">\n      <a mat-menu-item [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" *ngIf=\"!isLoggedIn\"> {{ \"signin\" | translate }}</a>\n      <a mat-menu-item  [routerLink]=\"['/about']\" routerLinkActive=\"router-link-active\" >{{ \"about\" | translate }}</a>\n    </mat-menu>\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n    <app-footer></app-footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progressbar',\n  templateUrl: './progressbar.component.html',\n  styleUrls: ['./progressbar.component.css']\n})\nexport class ProgressbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>","import { Component } from '@angular/core';\nimport { LoggerService } from '../logger.service';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppConfig } from '../../config/app.config';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css'],\n  providers: [\n    LoggerService\n  ]\n})\n\nexport class SearchBarComponent {\n\n  constructor(private router: Router) {\n  }\n}\n","<mat-autocomplete>\n    <mat-form-field>\n        <input matInput placeholder=\"{{ 'search' | translate }}!\">\n    </mat-form-field>\n</mat-autocomplete>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { EventService } from './../services/event.service';\nimport { AlertService } from './../services/alert.service';\nimport { MyEvent } from '../appcore/models/myevent.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent implements OnInit {\n  eventRegisterationForm: FormGroup;\n  events: MyEvent[];\n  event: MyEvent;\n  error: any;\n  imageSrc = '';\n\n  constructor(private formBuilder: FormBuilder, private eventService: EventService, private alertService: AlertService,\n    private router: Router) {\n    this.eventRegisterationForm = this.formBuilder.group({\n      'eventName': ['', [Validators.required]],\n      'eventDescription': ['', [Validators.required]],\n      'eventStartDate': ['', [Validators.required]],\n      'eventEndDate': ['', [Validators.required]],\n      'eventLocation': ['', [Validators.required]],\n      'eventImage': [],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllEvents();\n  }\n\n  registerEvent(eventRegisterationForm) {\n    eventRegisterationForm.eventImage = this.imageSrc;\n    this.eventService.createMyEvent(eventRegisterationForm).subscribe((events) => {\n      this.router.navigate(['/event']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'Failed to create event';\n      }\n      if (response.status === 403) {\n        this.router.navigate(['/login']);\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/event']);\n      }\n    });\n    this.getAllEvents();\n  }\n\n  getAllEvents() {\n    this.eventService.getAllMyEvents().subscribe(eventList => {\n      this.events = eventList;\n    });\n  }\n\n  getEventById(eventId: string) {\n\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<div class=\"form-container\" style=\"margin-bottom: 100px;\">\n    <mat-toolbar color=\"primary\">\n        {{ \"events\" | translate }}\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"eventRegisterationForm\" #form=\"ngForm\"\n                (ngSubmit)=\"registerEvent(eventRegisterationForm.value)\">\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventname' | translate }}\"\n                        formControlName=\"eventName\" />\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventdescription' | translate }}\"\n                        formControlName=\"eventDescription\" />\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"picker1\" placeholder=\"{{ 'startdate' | translate }}\"\n                        formControlName=\"eventStartDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"{{ 'enddate' | translate }}\"\n                        formControlName=\"eventEndDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventLocation' | translate }}\"\n                        formControlName=\"eventLocation\" />\n                </mat-form-field>\n\n                <div>\n                    <img [src]=\"imageSrc\" style=\"max-width:100px;max-height:100px\" />\n                    <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\"\n                        (change)=\"handleInputChange($event)\" formControlName=\"eventImage\" />\n                </div>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <br />\n                <button mat-raised-button color=\"primary\" type=\"submit\">\n                    {{ \"createevent\" | translate }}\n                </button>\n                <button mat-raised-button color=\"accent\" type=\"reset\" style=\"margin-left: 20px;\">\n                    {{ \"reset\" | translate }}\n                </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<div class=\"form-container\">\n\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\" fxLayoutAlign=\"flex-start\">\n        <ng-container *ngFor=\"let event of events\">\n            <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n                <mat-card-header>\n                    <mat-card-title>{{event.eventName}}</mat-card-title>\n                </mat-card-header>\n                <img class=\"mat-card-mat-image\" src=\"{{event.eventImage}}\" height=\"100\" width=\"200\" />\n                <mat-card-footer>\n                    <mat-card-subtitle style=\"text-align: center;\">{{event.eventDescription}}</mat-card-subtitle>\n                    <mat-card-subtitle style=\"text-align: center;\"> Start Date : {{event.eventStartDate}} To End Date :\n                        {{event.eventEndDate}} </mat-card-subtitle>\n                </mat-card-footer>\n            </mat-card>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from '../services/feedback.service';\nimport { AlertService } from '../services/alert.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Feedback } from '../appcore/models/feedback.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  feedback: Feedback;\n  feedbacks: Feedback[];\n  newFeedbackForm: FormGroup;\n  error: any;\n  constructor(private feedBackService: FeedbackService, private formBuilder: FormBuilder, private alertService: AlertService,\n    private router: Router\n  ) {\n    this.newFeedbackForm = this.formBuilder.group({\n      'senderName': ['', [Validators.required]],\n      'senderEmail': ['', [Validators.required]],\n      'senderFeedback': ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllFeedbacks();\n  }\n\n  getAllFeedbacks() {\n    this.feedBackService.getAllFeedbacks().subscribe((feedbacks) => {\n      this.feedbacks = feedbacks;\n    });\n  }\n\n  sendFeedback(newFeedback) {\n    this.feedBackService.sendFeedback(newFeedback).subscribe((feedback) => {\n      this.router.navigate(['/']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'Failed to send feedback';\n        this.alertService.showToaster('Failed to send feedback');\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/']);\n        this.alertService.showToaster('Feedback sent sucessfully');\n      }\n    });\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n        <h2>\n            <span>{{ \"feedback\" | translate }}</span>\n        </h2>\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newFeedbackForm\" #form=\"ngForm\" (ngSubmit)=\"sendFeedback(newFeedbackForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'name' | translate }}\" formControlName=\"senderName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'email' | translate }}\" formControlName=\"senderEmail\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <textarea matInput class=\"form-control\" placeholder=\"{{'typefeedbackhere' | translate}}\"\n                        formControlName=\"senderFeedback\" rows=\"15\"></textarea>\n                </mat-form-field>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" color=\"accent\" type=\"reset\">\n                        {{ \"reset\" | translate }}\n                    </button>\n                    <button type=\"submit\" mat-raised-button color=\"primary\" class=\"input-button\">\n                        {{ \"feedback\" | translate }}\n                    </button>\n                </mat-card-actions>\n            </form>\n        </mat-card-content>\n        <mat-card-footer></mat-card-footer>\n    </mat-card>\n</div>\n<!-- <div class=\"form-container\">\n    <mat-list style=\"margin-top: 60px;\">\n        <mat-list-item style=\"margin-bottom: 60px;\" *ngFor=\"let feedback of feedbacks\">\n            <mat-card flex-wrap=\"nowrap\" style=\"width:100%;\">\n                <mat-card-header>\n                    <mat-card-title>\n                        Feedback from : {{ feedback.senderName }}\n                    </mat-card-title>\n                    <mat-card-subtitle>Feedback : {{\n                        feedback.senderFeedback\n                        }}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </mat-list-item>\n    </mat-list>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../appcore/models/user.model';\nimport { UserService } from '../services/user.service';\nimport { Blog } from '../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlogsService } from '../services/blogs.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n  users: User[] = [];\n  blogs: Blog[] = null;\n  blogCount: number;\n\n  constructor(\n    private userService: UserService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router, private blogService: BlogsService) {\n\n  }\n\n  ngOnInit() {\n\n    this.getAllBlogs();\n  }\n\n  getAllBlogs(): void {\n    this.blogService.getAllblogs().subscribe(\n      blogList => {\n        this.blogCount = blogList.length;\n        this.blogs = blogList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readBlog(_id: string) {\n    this.router.navigate(['/blog/' + _id]);\n  }\n}\n","<img src=\"assets/images/blogfront.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\" />\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"flex-start\">\n  <ng-container *ngFor=\"let blog of blogs\" style=\"margin-top: 20px;\">\n    <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"80%\">\n      <mat-card-header fxLayout=\"row\">\n        <div mat-card-avatar>\n          <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius: 50%;\" />\n        </div>\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>{{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{ blog.blogCreated | date }} <mat-chip color=\"primary\" selected>{{blog.blogCategory}}\n          </mat-chip>\n        </mat-card-subtitle>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n        </mat-menu>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </mat-card-header>\n      <img class=\"mat-card-image\" src=\"{{blog.blogImage}}\" style=\"height: 200px;\" />\n      <mat-card-content style=\"height: 60px;overflow: hidden;\">\n        <p>{{ blog.blogContent }}</p>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        <button mat-button (click)=\"readBlog(blog._id)\">Read More..</button>\n      </mat-card-footer>\n    </mat-card>\n  </ng-container>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AlertService } from '../../services/alert.service';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { CommunicatorService } from 'src/app/services/communicator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  loading = false;\n  newLoginForm: FormGroup;\n  canVote = false;\n  error: string;\n  USER_TOKEN = 'USER_TOKEN';\n  isLoggedIn = false;\n  USER_DATA = 'USER_DATA';\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private alertService: AlertService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService, private communicatorService: CommunicatorService) { }\n\n  ngOnInit() {\n    this.newLoginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  login(newLoginForm) {\n    if (newLoginForm.username === '') {\n      this.alertService.showToaster('Please enter username');\n      return;\n    } else if (newLoginForm.password === '') {\n      this.alertService.showToaster('Please enter password');\n      return;\n    }\n    this.userService.login(newLoginForm).subscribe(\n      data => {\n        if (data.status !== 200) {\n          this.error = 'Failed to login';\n          this.alertService.showToaster('Failed to login');\n          return;\n        }\n        const response = data.json();\n        this.storageService.set(this.USER_TOKEN, response.token);\n        this.storageService.set(this.USER_DATA, response.user);\n        this.isLoggedIn = response.auth;\n        this.communicatorService.isLoggedIn.next(true);\n        this.router.navigate(['']);\n        this.alertService.showToaster('Welcome to WriterHub, Logged in successfully');\n      },\n      error => {\n        this.loading = false;\n        if (error.status === 404) {\n          this.error = 'Username or password is incorrect';\n          this.alertService.showToaster('Username or password is incorrect');\n          return;\n        }\n        if (error.status === 504) {\n          this.error = 'Service not available';\n          this.alertService.showToaster('Service not available');\n          return;\n        }\n        if (error.status === 401) {\n          this.error = 'Username or password is incorrect';\n          this.alertService.showToaster('Username or password is incorrect');\n          return;\n        }\n      }\n    );\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n        <h2>\n            <span>{{ \"loginform\" | translate }}</span>\n        </h2>\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newLoginForm\" #form=\"ngForm\" (ngSubmit)=\"login(newLoginForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'username' | translate }}\" formControlName=\"username\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'password' | translate }}\"\n                        formControlName=\"password\" />\n                </mat-form-field>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" routerLink=\"/signup\" color=\"accent\" type=\"button\">\n                        {{ \"signup\" | translate }}\n                    </button>\n                    <button type=\"submit\" mat-raised-button class=\"input-button\">\n                        {{ \"login\" | translate }}\n                    </button>\n                </mat-card-actions>\n\n            </form>\n        </mat-card-content>\n        <mat-card-footer></mat-card-footer>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from './../services/news.service';\nimport { News } from './../appcore/models/news.model';\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  news: News[] = [];\n\n  news_categories = [\n    { value: 'business', viewValue: 'Business' },\n    { value: 'technology', viewValue: 'Technology' },\n    { value: 'entertainment', viewValue: 'Entertainment' },\n    { value: 'health', viewValue: 'Health' },\n    { value: 'science', viewValue: 'Science' },\n    { value: 'sports', viewValue: 'Sports' }\n  ];\n  newsources = [{ value: 'the-times-of-india', viewValue: 'Times of India' }, { value: 'google-news-in', viewValue: 'Google News' },\n  { value: 'the-hindu', viewValue: 'The Hindu' }, { value: 'cnn', viewValue: 'CNN' }];\n\n  countries = [\n    { value: 'in', viewValue: 'India' },\n    { value: 'au', viewValue: 'Australia' },\n    { value: 'ar', viewValue: 'Austria' },\n    { value: 'br', viewValue: 'Brazil' },\n    { value: 'cn', viewValue: 'China' },\n    { value: 'in', viewValue: 'India' },\n    { value: 'id', viewValue: 'Indonation' },\n    { value: 'fr', viewValue: 'France' },\n    { value: 'de', viewValue: 'Germany' },\n    { value: 'it', viewValue: 'Italy' },\n    { value: 'uk', viewValue: 'United Kingdom' },\n    { value: 'us', viewValue: 'United States' }\n  ];\n  selectedCountry = '';\n  selectedCategory = '';\n  selectedSource = '';\n  selectedCntry = 'in';\n  selectedCat = 'business';\n  \n  constructor(private newsService: NewsService) {\n    this.news = null;\n    this.newsService.getAllNews('in', 'business').subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n  selectOneCountry(selected) {\n    this.selectedCountry = selected.value;\n    this.news = null;\n    this.newsService.getAllNews(this.selectedCountry, 'business').subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n  selectOneCategory(selected) {\n    this.selectedCategory = selected.value;\n    this.news = null;\n    this.newsService.getAllNews(this.selectedCountry, this.selectedCategory).subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n\n  selectOneSource(selected) {\n    this.selectedSource = selected.value;\n    this.news = null;\n    this.newsService.getAllNewsBySource(this.selectedSource).subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n  ngOnInit() {\n  }\n\n}\n","<div class=\"view-container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\"\n  *ngIf=\"news\">\n\n  <div class=\"item item-1\" fxFlex=\"15%\">\n    <mat-accordion>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select Country </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select Country\" [(ngModel)]=\"selectedCntry\"\n            (selectionChange)=\"selectOneCountry($event)\">\n            <mat-option *ngFor=\"let country of countries\" [value]=\"country.value\">\n              {{ country.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select Categories </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select Categories\" [(ngModel)]=\"selectedCat\"\n            (selectionChange)=\"selectOneCategory($event)\">\n            <mat-option *ngFor=\"let news_cat of news_categories\" [value]=\"news_cat.value\">\n              {{ news_cat.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select News source </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select News Sources\" (selectionChange)=\"selectOneSource($event)\">\n            <mat-option *ngFor=\"let newssource of newsources\" [value]=\"newssource.value\">\n              {{ newssource.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n  <div class=\"item item-2\" fxFlex>\n    <mat-toolbar color=\"primary\" style=\"margin-left: 15px;\">\n      {{ \"news\" | translate }} Powered by newsapi.org\n    </mat-toolbar>\n    <mat-list style=\"margin-top: 60px;\">\n      <mat-list-item style=\"margin-bottom: 150px;\" *ngFor=\"let newOne of news\">\n        <mat-card flex-wrap=\"nowrap\" style=\"width:100%;\">\n          <mat-card-header>\n            <div mat-card-avatar>\n              <img src=\"{{newOne.urlToImage}}\" width=\"100\" height=\"50\" style=\"margin-right: 50px;\" />\n            </div>\n            <mat-card-title style=\"margin-left: 50px;\">\n              {{ newOne.title }}\n            </mat-card-title>\n            <mat-card-subtitle style=\"margin-left: 50px;\">{{\n              newOne.description\n              }}</mat-card-subtitle>\n            <mat-card-subtitle style=\"margin-left: 50px;\">\n              {{ newOne.author }}\n            </mat-card-subtitle>\n            <mat-card-subtitle style=\"margin-left: 50px;\">\n              Posted on {{ newOne.publishedAt }}\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-actions layout=\"row \" layout-align=\"start center \">\n            <a mat-raised-button href=\"{{ newOne.url }}\" target=\"_blank\">Read More</a>\n          </mat-card-actions>\n        </mat-card>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-paginator [length]=\"news.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n      </mat-paginator>\n    </mat-list>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { User } from '../appcore/models/user.model';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  sharePhoto: FormGroup;\n  error: string;\n  USER_DATA = 'USER_DATA';\n  user: User;\n  imageSrc = 'assets/images/default.png';\n  updatedImage = '';\n  constructor(private formBuilder: FormBuilder, @Inject(SESSION_STORAGE) private storageService: StorageService\n  ) {\n    this.sharePhoto = this.formBuilder.group({\n      'photo_path': ['', [Validators.required]],\n      'photo_caption': ['', [Validators.required]],\n      'photo_location': ['', [Validators.required]],\n      'upload_date': ['', Validators.required],\n    });\n    this.user = this.storageService.get(this.USER_DATA);\n  }\n  ngOnInit() {\n    this.user = this.storageService.get(this.USER_DATA);\n  }\n  uploadImage(updatedImage) {\n    console.log(updatedImage);\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<img src=\"assets/images/blogfront.png\" style=\"width: 100%;height: 300px;\">\n<mat-tab-group class=\"demo-tab-group\">\n  <mat-tab label=\"Basic details\">\n    <div class=\"tab-content\">\n      <br/>\n      <div>\n        <img mat-card-image [src]=\"imageSrc\" style=\"border-radius: 50%;max-width:200px;max-height:150px;\" />\n        <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\" />\n        <button mat-button (click)=\"uploadImage(imageSrc)\">Update </button>\n      </div>\n\n      <br /> Profile <br /> <a href=\"http://writerhub/pranaysmokal\">http://writerhub/{{user.username}} </a><br />\n      <br /> Name <br />\n      <h3> {{ user.firstName + \" \" + user.lastName }} </h3><br />\n      <br /> Username <br />\n      <h3> {{user.username}} </h3><br />\n      Contact Number <br /> {{user.contact}} <br />\n      <br /> Email <br> {{user.email}} <br />\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Post\">\n    <!-- <form>\n      <mat-form-field style=\"width: 50%;\">\n        <textarea matInput class=\"form-control\" placeholder=\"Share Something!!\" formControlName=\"photo_caption\" rows=\"5\"></textarea>\n      </mat-form-field><br />\n      <mat-slide-toggle matInput class=\"form-control\" formControlName=\"photo_location\" style=\"margin-left: 10px;\">Share\n        location</mat-slide-toggle>\n      <button matInput class=\"form-control\" mat-raised-button style=\"margin-left: 10px;\">Upload Photo</button>\n      <button matInput class=\"form-control\" mat-raised-button color=\"primary\" style=\"margin-left: 10px;\">Share</button>\n    </form>-->\n    <br />\n  </mat-tab>\n  <mat-tab label=\"My Blogs\">\n    these are the blogs\n  </mat-tab>\n  <mat-tab label=\"Photos\">\n    <div class=\"tab-content\">\n\n      <mat-grid-list style=\"margin-top: 100px;\" cols=\"2\" rowHeight=\"2:1\">\n        <mat-grid-tile>\n          <mat-card class=\"photoshares\">\n            <mat-card-header>\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-card-title>\n                <mat-menu #menu=\"matMenu\" layout-align=\"end center\">\n                  <button mat-menu-item>\n                    <mat-icon>share</mat-icon>\n                    <span>Share</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>voicemail</mat-icon>\n                    <span>Hide</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete</span>\n                  </button>\n                </mat-menu>\n              </mat-card-title>\n            </mat-card-header>\n            <img mat-card-mat-image src=\"assets/images/developer/pranaymokal.png\" stype=\"height:300px;width:200px;\">\n            <mat-card-actions>\n              <button mat-button>\n                <mat-icon>thumb_up</mat-icon>Like\n              </button>\n              <button mat-button>\n                <mat-icon>thumb_down</mat-icon>Dislike\n              </button>\n              <button mat-button>\n                <mat-icon>comment</mat-icon>Comment\n              </button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <mat-card class=\"photoshares\">\n            <mat-card-header>\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-card-title>\n                <mat-menu #menu=\"matMenu\" layout-align=\"end center\">\n                  <button mat-menu-item>\n                    <mat-icon>share</mat-icon>\n                    <span>Share</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>voicemail</mat-icon>\n                    <span>Hide</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete</span>\n                  </button>\n                </mat-menu>\n              </mat-card-title>\n            </mat-card-header>\n            <img mat-card-mat-image src=\"assets/images/developer/pranaymokal.png\" stype=\"height:300px;width:200px;\">\n            <mat-card-actions>\n              <button mat-button>\n                <mat-icon>thumb_up</mat-icon>Like\n              </button>\n              <button mat-button>\n                <mat-icon>thumb_down</mat-icon>Dislike\n              </button>\n              <button mat-button>\n                <mat-icon>comment</mat-icon>Comment\n              </button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <br />\n\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Recent likes\">\n    This tab is about likes!\n  </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport {User} from '../../appcore/models/user.model';\nimport { RecepiesService } from '../../services/recepies.service';\n\n\n@Component({\n  selector: 'app-create-recepie',\n  templateUrl: './create-recepie.component.html',\n  styleUrls: ['./create-recepie.component.css']\n})\nexport class CreateRecepieComponent implements OnInit {\n\n  createRecepie: FormGroup;\n  @ViewChild('form') ngForm;\n  error: string;\n  imageSrc = '';\n  user: User;\n  model = { recepieName: '',\n  recepieState: '',\n  recepieImage: '',\n  recepieCategory : '',\n  recepieContent : '',\n  recepieTags : '',\n  };\n\n  categories = [\n    { value: 'drink', viewValue: 'Drink' },\n    { value: 'vegitarian', viewValue: 'Vegitarian' },\n    { value: 'non-vegitarian', viewValue: 'Non Vegitarion' },\n    { value: 'sea-food', viewValue: 'Sea Food' },\n    { value: 'curry', viewValue: 'curry' },\n    { value: 'chicken', viewValue: 'Chicken' },\n    { value: 'cakes', viewValue: 'Cakes' },\n    { value: 'cookies', viewValue: 'Cookies' },\n    { value: 'other', viewValue: 'Other' }\n  ];\n\n  constructor(private recepieService: RecepiesService,\n    private formBuilder: FormBuilder, private router: Router,@Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.createRecepie = this.formBuilder.group({\n      'recepieName': ['', [Validators.required]],\n      'recepieContent': ['', [Validators.required]],\n      'recepieTags': ['', Validators.required],\n      'recepieCategory': ['', Validators.required],\n      'recepieImage': [''],\n    });\n  }\n\n  createNewRecepie(newRecepie) {\n    newRecepie.recepieImage = this.imageSrc;\n    newRecepie.recepieState = 'created';\n    this.user = this.storageService.get('USER_DATA');\n    newRecepie.recepieAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.recepieService.addRecepie(newRecepie).subscribe((blogs) => {\n      this.router.navigate(['/recepies']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if(response.status === 201){\n        this.router.navigate(['/recepies']);\n      }\n    });\n  }\n  \n  publishRecepie(model) {\n    model.recepieImage = this.imageSrc;\n    model.recepieState = 'published';\n    this.recepieService.addRecepie(model).subscribe((recepies) => {\n      this.router.navigate(['/recepies']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/recepies']);\n      }\n    });\n  }\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n      <h1>{{ \"addrecepie\" | translate }}</h1>\n    </mat-toolbar>\n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"createRecepie\" #form=\"ngForm\" (ngSubmit)=\"createNewRecepie(createRecepie.value)\">\n          <mat-form-field class=\"input-field\">\n            <input matInput class=\"form-control\" placeholder=\"{{'recepiename' | translate}}\" formControlName=\"recepieName\" [(ngModel)]=\"model.recepieName\"/>\n          </mat-form-field>\n          <mat-form-field class=\"input-field\">\n            <mat-select placeholder=\"Blog categories\" placeholder=\"{{'recepiecategories' | translate}}\" formControlName=\"recepieCategory\" [(ngModel)]=\"model.recepieCategory\">\n              <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.value\">\n                {{ cat.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"input-field\">\n            <textarea matInput class=\"form-control\" placeholder=\"{{'writerecepieshere' | translate}}\" formControlName=\"recepieContent\" rows=\"20\" [(ngModel)]=\"model.recepieContent\" ></textarea>\n          </mat-form-field>\n  \n          <mat-form-field class=\"input-field\">\n            <input matInput placeholder=\"Add Tags\" formControlName=\"recepieTags\" [(ngModel)]=\"model.recepieTags\"/>\n          </mat-form-field>\n  \n          <div>\n            <img [src]=\"imageSrc\" style=\"max-width:300px;max-height:300px\" />\n            <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\"\n              formControlName=\"recepieImage\"/>\n          </div>\n  \n          <mat-card-actions>\n            <button type=\"submit\" mat-raised-button>{{ \"addrecepie\" | translate }}</button>\n            <button mat-raised-button (click)='publishRecepie(model)'>{{ \"publishrecepie\" | translate }}</button>\n          </mat-card-actions>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Recepie } from '../../appcore/models/recepie.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RecepiesService } from './../../services/recepies.service';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-recepie-detail',\n  templateUrl: './recepie-detail.component.html',\n  styleUrls: ['./recepie-detail.component.css']\n})\nexport class RecepieDetailComponent implements OnInit {\n  recepie: Recepie;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private recepieService: RecepiesService\n  ) {}\n\n  ngOnInit() {\n    const recepieDetail = this.recepieService.getRecepieById(\n      this.route.snapshot.paramMap.get('id')\n    );\n    recepieDetail.subscribe(res => {\n      this.recepie = res;\n    });\n  }\n\n}\n","  <div fxLayout=\"column wrap\" fxLayoutAlign=\"start\" fxFlex=\"100\" flex-wrap=\"nowrap\" *ngIf=\"recepie\">\n    <mat-card>\n      <mat-card-header fxLayout=\"row\">\n        <img class=\"mat-card-mat-image\" src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50 \" style=\"border-radius: 50%;\">\n        <div class=\"header-actions\" style=\"margin-left: 20px\">\n          <mat-card-title>{{ recepie.recepieName }}</mat-card-title>\n          <mat-card-subtitle>Author : {{ recepie.recepieAuthor }}</mat-card-subtitle>\n          <mat-card-subtitle>Posted on {{recepie.recepieCreated | date}}</mat-card-subtitle>\n        </div>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n          <button mat-menu-item>Rate</button>\n        </mat-menu>\n          <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n      </mat-card-header>\n      <img src=\"{{recepie.recepieImage}}\" class=\"center\" height=\"350\" width=\"350\" style=\"margin-bottom: 20px;\">\n      <mat-card-content>\n      <pre  class=\"preclass\" style=\"text-justify: inter-word;margin-top: 40px;font-size:18px;\">\n           {{recepie.recepieContent}} </pre>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{recepie.recepieLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{recepie.recepieDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button class=\"mat-icon-button\" aria-label=\"toggle \">\n          <mat-icon mat-svg-icon=\"mat-toggle-arrow \"></mat-icon>\n          <button mat-button matBadge=\"{{recepie.recepieViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        </button>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Comments\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <form class=\"example-container\">\n            <mat-form-field>\n              <textarea matInput placeholder=\"Leave a comment\"></textarea>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" style=\"width: 100px;\">comment</button>\n          </form>\n        </mat-expansion-panel>\n      </mat-card-footer>\n    </mat-card>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Recepie } from '../../appcore/models/recepie.model';\nimport { RecepiesService } from './../../services/recepies.service';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-recepies',\n  templateUrl: './recepies.component.html',\n  styleUrls: ['./recepies.component.css']\n})\nexport class RecepiesComponent implements OnInit {\n\n  recepies: Recepie[];\n  recepieCount: Number = 0;\n  length = 0;\n  pageIndex = 0;\n  pageSize = 5;\n  pageEvent: PageEvent;\n  pageSizeOptions: number[] = [5, 10, 25, 50, 100];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private recepieService: RecepiesService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.getAllRecepies();\n  }\n\n  ngOnInit() {}\n\n  getAllRecepies(): void {\n    this.recepieService.getAllRecepies().subscribe(\n      recepieList => {\n        this.recepieCount = recepieList.length;\n        this.recepies = recepieList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readRecepie(recepieId: string) {\n    this.router.navigate(['/recepie/' + recepieId]);\n  }\n\n  pageChange($event) {\n    const startIndex = $event.pageIndex * $event.pageSize;\n    let endIndex = 0;\n    if ($event.previousPageIndex < $event.pageIndex) {\n      endIndex = $event.pageSize + $event.pageSize;\n    } else {\n      endIndex = $event.pageSize;\n    }\n    this.recepies = this.recepies.slice(startIndex, endIndex);\n  }\n\n}\n","<img src=\"assets/images/food.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\"/>\n<div *ngIf=\"recepies\">\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\" fxLayoutAlign=\"flex-start\">\n    <ng-container *ngFor=\"let recepie of recepies\">\n      <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius:50%\" />\n          </div>\n          <mat-card-title>{{ recepie.recepieName }}</mat-card-title>\n          <mat-card-subtitle>Author : {{ recepie.recepieAuthor }}</mat-card-subtitle>\n          <mat-card-subtitle>Posted on {{ recepie.recepieCreated | date}} <mat-chip color=\"primary\" selected>{{recepie.recepieCategory}}</mat-chip>\n          </mat-card-subtitle>\n          <div fxFlex></div>\n          <mat-menu #appMenu=\"matMenu\">\n              <button mat-menu-item>Share</button>\n              <button mat-menu-item>Hide</button>\n              <button mat-menu-item>Rate</button>\n            </mat-menu>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n              <mat-icon>more_vert</mat-icon>\n          </button>\n\n        </mat-card-header>\n        <img class=\"mat-card-image\" src=\"{{recepie.recepieImage}}\"  height=\"300\"/>\n\n        <mat-card-content style=\"height: 60px;overflow: hidden;\">\n          <p>{{ recepie.recepieContent }}</p>\n        </mat-card-content>\n        <mat-card-footer>\n            <button mat-button matBadge=\"{{recepie.recepieLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n                <mat-icon>thumb_up</mat-icon>Like\n            </button>\n            <button mat-button matBadge=\"{{recepie.recepieDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n                <mat-icon>thumb_down</mat-icon>Dislike\n          </button>\n          <button mat-button matBadge=\"{{recepie.recepieViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n          <button mat-button (click)=\"readRecepie(recepie._id)\">Read More..</button>\n        </mat-card-footer>\n      </mat-card>\n    </ng-container>\n  </div>\n\n  <mat-paginator *ngIf=\"recepies\" [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100] \">\n  </mat-paginator>\n</div>\n","import { AlertService } from './../services/alert.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserService } from '../services/user.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  model: any = {};\n  loading = false;\n  newRegisterForm: FormGroup;\n  error: string;\n  isCreated = false;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private translator: TranslateService,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {\n\n    this.newRegisterForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      confirmpassword: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      contact: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n    });\n  }\n\n  registerUser(newRegisterForm) {\n    if(this.newRegisterForm.invalid){\n      return;\n    }\n    this.userService.create(newRegisterForm).subscribe(\n      data => {\n        this.router.navigate(['/login']);\n        this.alertService.showToaster('Registration successful');\n      },\n      error => {\n        this.alertService.showToaster(error);\n        this.loading = false;\n      }\n    );\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\"> {{ \"signup\" | translate }} </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newRegisterForm\" #form=\"ngForm\" (ngSubmit)=\"registerUser(newRegisterForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'firstname' | translate }}\"\n                        formControlName=\"firstName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'lastname' | translate }}\" formControlName=\"lastName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'username' | translate }}\" formControlName=\"username\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"email\" placeholder=\"{{ 'email' | translate }}\" formControlName=\"email\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"number\" placeholder=\"{{ 'mobile' | translate }}\" formControlName=\"contact\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'password' | translate }}\"\n                        formControlName=\"password\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'confirmpassword' | translate }}\"\n                        formControlName=\"confirmpassword\" />\n                </mat-form-field>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" color=\"accent\" type=\"reset\">\n                        {{ \"reset\" | translate }}\n                    </button>\n                    <button mat-raised-button class=\"input-button\" color=\"primary\" type=\"submit\">\n                        {{ \"signup\" | translate }}\n                    </button>\n                </mat-card-actions>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class AlertService {\n    horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n    verticalPosition: MatSnackBarVerticalPosition = 'top';\n  \n\n    constructor(private snackBar: MatSnackBar) {\n    }\n\n    showToaster(msg: string) {\n        this.snackBar.open(msg, null, {\n            duration: 3000,\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,      \n        });\n    }\n\n}\n","import { Dislike } from './../appcore/models/dislike.model';\nimport { Like } from './../appcore/models/like.model';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Blog } from '../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { Comment } from '../../app/appcore/models/comment.model';\n\n@Injectable()\nexport class BlogsService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private blogs: Blog[];\n  private blog: Blog;\n  private token: string;\n  private secureheaders: HttpHeaders;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllblogs(): Observable<Blog[]> {\n    return this.http.get<Blog[]>(AppConfig.appRestPoints.blogs, { headers: this.headers }).pipe(\n      map(response => response));\n  }\n\n  getBlogById(blogId: string): Observable<Blog> {\n    return this.http.get<Blog>(AppConfig.appRestPoints.blogs + '/' + blogId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  getCommentsByBlogId(blogId: string): Observable<Comment[]> {\n    return this.http.get<Comment[]>(AppConfig.appRestPoints.comments + '/blog/' + blogId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  like(blogId: string, isLiked: boolean): Observable<Like> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of(new Like(0, 'please sign in to like')\n      );\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Like>(AppConfig.appRestPoints.blogs + '/' + blogId + '/like', JSON.stringify({ isLiked: isLiked }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  dislike(blogId: string, disLiked: boolean): Observable<Dislike> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of(new Dislike(0, 'please sign in to Dislike'));\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Dislike>(AppConfig.appRestPoints.blogs + '/' + blogId + '/dislike', JSON.stringify({ isDisLiked: disLiked }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  createBlog(blog: any): Observable<Blog> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Blog>(AppConfig.appRestPoints.blogs + '/create', JSON.stringify({\n          blogName: blog.blogName,\n          blogContent: blog.blogContent,\n          blogCategory: blog.blogCategory,\n          blogAuthor: blog.blogAuthor,\n          blogTags: [blog.blogTags],\n          blogImage: blog.blogImage\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Blog Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  addCommentOnBlog(comment: Comment): Observable<string> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of('please sign in to Comment');\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<string>(AppConfig.appRestPoints.comments + '/create', JSON.stringify({\n          commentText: comment.commentText,\n          commentAuthor: comment.commentAuthor,\n          blogId: comment.blogId,\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class CommunicatorService {\n    public isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n}\n","import { MyEvent } from '../appcore/models/myevent.model';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class EventService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private events: MyEvent[];\n  private event: MyEvent;\n  private token: string;\n  private secureheaders: HttpHeaders;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllMyEvents(): Observable<MyEvent[]> {\n    return this.http.get<MyEvent[]>(AppConfig.appRestPoints.events).pipe(\n      map(response => response));\n  }\n\n  getMyEventById(MyEventId: string): Observable<MyEvent> {\n    return this.http.get<MyEvent>(AppConfig.appRestPoints.events + '/' + MyEventId)\n      .pipe(map(response => response));\n  }\n\n  createMyEvent(event: any): Observable<MyEvent> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': (this.token || '') });\n    try {\n      return this.http\n        .post<MyEvent>(AppConfig.appRestPoints.events + '/create', JSON.stringify({\n          eventName: event.eventName,\n          eventDescription: event.eventDescription,\n          eventLocation: event.eventLocation,\n          eventOrganizer: event.eventOrganizer,\n          eventImage: event.eventImage,\n          eventStartDate: event.eventStartDate,\n          eventEndDate: event.eventEndDate,\n          eventLikes: event.eventLikes,\n          eventDislikes: event.eventDislikes\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Event Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Feedback } from '../appcore/models/feedback.model';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class FeedbackService {\n  headers: HttpHeaders;\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  getAllFeedbacks(): Observable<Feedback[]> {\n    return this.http.get<Feedback[]>(AppConfig.appRestPoints.feedbacks).pipe(\n      map(response => response));\n  }\n\n  getFeedbackById(feedbackId: string): Observable<Feedback> {\n    return this.http.get<Feedback>(AppConfig.appRestPoints.feedbacks + '/' + feedbackId)\n      .pipe(map(response => response));\n  }\n\n  sendFeedback(feedback: any): Observable<Feedback> {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    try {\n      return this.http\n        .post<Feedback>(AppConfig.appRestPoints.feedbacks + '/create', JSON.stringify({\n          senderName: feedback.senderName,\n          senderEmail: feedback.senderEmail,\n          senderFeedback: feedback.senderFeedback,\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Feedback sent sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(name, 'OK', config);\n  }\n\n\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { News } from './../appcore/models/news.model';\nimport { AppConfig } from '../config/app.config';\n\n\n@Injectable()\nexport class NewsService {\n  private headers: HttpHeaders;\n  private newsUrl: string;\n  private newsUpdated: string;\n  constructor(private http: HttpClient) {\n    this.newsUrl = AppConfig.appRestPoints.news;\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  }\n\n  getAllNews(country: String, category: String): Observable<News[]> {\n    try {\n      if (country) {\n        this.newsUpdated = this.newsUrl + 'in' + AppConfig.appRestPoints.newsapi;\n      }\n      else if (category) {\n        this.newsUpdated = this.newsUrl + country + '&category=' + category + AppConfig.appRestPoints.newsapi;\n      } else {\n        this.newsUpdated = this.newsUrl + country + '&category=' + category + AppConfig.appRestPoints.newsapi;\n      }\n      return this.http.get<{ articles: News[] }>(this.newsUpdated).pipe(\n        map(response => response.articles));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n\n  getAllNewsBySource(source: String): Observable<News[]> {\n    try {\n\n      this.newsUpdated = 'https://newsapi.org/v2/top-headlines?sources=' + source + AppConfig.appRestPoints.newsapi;\n      return this.http.get<{ articles: News[] }>(this.newsUpdated).pipe(\n        map(response => response.articles));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  private handleError(error: any) {\n    return observableThrowError(error || 'backend server error');\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Recepie } from '../../app/appcore/models/recepie.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class RecepiesService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private token: string;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllRecepies(): Observable<Recepie[]> {\n    return this.http.get<Recepie[]>(AppConfig.appRestPoints.recepies, { headers: this.headers }).pipe(\n      map(response => response));\n  }\n\n  getRecepieById(recepieId: string): Observable<Recepie> {\n    return this.http.get<Recepie>(AppConfig.appRestPoints.recepies + '/' + recepieId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  addRecepie(recepie: any): Observable<Recepie> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Recepie>(AppConfig.appRestPoints.recepies + '/create', JSON.stringify({\n          recepieName: recepie.recepieName,\n          recepieContent: recepie.recepieContent,\n          recepieCategory: recepie.recepieCategory,\n          recepieAuthor: recepie.recepieAuthor,\n          recepieImage: recepie.recepieImage,\n          recepieViews: 0,\n          recepieLikes: 0,\n          recepieDislikes: 0,\n          recepieTags: recepie.recepieTags\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Recepie Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { RequestOptions, Http, Headers, Response } from '@angular/http';\nimport { User } from '../appcore/models/user.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { AppConfig } from '../config/app.config';\n\n\n@Injectable()\nexport class UserService {\n    private headers: HttpHeaders;\n    private user_key = 'USER_DATA';\n    private storedUser: User;\n    constructor(private http: Http, @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    }\n\n    getAll() {\n        return this.http.get(AppConfig.appRestPoints.users).pipe(map((response: Response) => response));\n    }\n\n    getById(id: string) {\n        return this.http.get(AppConfig.appRestPoints.users + '/' + id).pipe(map((response: Response) => response));\n    }\n\n    login(user: User) {\n        return this.http.post(AppConfig.appRestPoints.login, user).pipe(map((response: Response) => response));\n    }\n\n    create(user: User) {\n        return this.http.post(AppConfig.appRestPoints.register, user).pipe(map((response: Response) => response));\n    }\n\n    update(user: User) {\n        return this.http.put(AppConfig.appRestPoints.users + '/' + user._id, user).pipe(map((response: Response) => response));\n    }\n\n    delete(id: string) {\n        return this.http.delete(AppConfig.appRestPoints.users + '/' + id).pipe(map((response: Response) => response));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  settings = [\n    {\n      'name': 'Privacy policy',\n      'description': 'Privacy policies for user',\n      'icon': 'privacy',\n    },\n    {\n      'name': 'Language',\n      'description': 'Select Language',\n      'icon': 'language',\n    },\n    {\n      'name': 'Security',\n      'description': 'Security Options',\n      'icon': 'security',\n    },\n    {\n      'name': 'Reset Password',\n      'description': 'Reset Password',\n      'icon': 'password',\n    },\n    {\n      'name': 'SMS/Email Notification',\n      'description': 'SMS/Email Notification',\n      'icon': 'notification',\n    },\n    {\n      'name': 'Block list',\n      'description': 'Block peoples',\n      'icon': 'block',\n    }\n  ];\n  constructor() { }\n  ngOnInit() { }\n}\n","<div fxLayout=\"column\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\">\n  <mat-list *ngFor=\"let setting of settings\">\n    <mat-list-item>\n      <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n        <mat-card-header>\n          <mat-card-title style=\"text-align: center;\">{{setting.name}}</mat-card-title>\n        </mat-card-header>\n        <mat-card-footer>\n          <mat-card-subtitle style=\"text-align: center;\">{{setting.description}}</mat-card-subtitle>\n        </mat-card-footer>\n      </mat-card>\n    </mat-list-item>\n  </mat-list>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
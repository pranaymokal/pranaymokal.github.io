{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.translate.factory.ts","./src/app/appcore/models/comment.model.ts","./src/app/appcore/models/dislike.model.ts","./src/app/appcore/models/like.model.ts","./src/app/appcore/modules/appcore.module.ts","./src/app/appcore/modules/material.module.ts","./src/app/blogs/blog-detail/blog-detail.component.ts","./src/app/blogs/blog-detail/blog-detail.component.html","./src/app/blogs/blog-list/blog-list.component.ts","./src/app/blogs/blog-list/blog-list.component.html","./src/app/blogs/blogs.module.ts","./src/app/blogs/create-blog/create-blog.component.ts","./src/app/blogs/create-blog/create-blog.component.html","./src/app/config/app.config.ts","./src/app/core/core.module.ts","./src/app/core/error404/error-404.component.ts","./src/app/core/error404/error-404.component.html","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/core/logger.service.ts","./src/app/core/module-import-guard.ts","./src/app/core/nav/nav.component.ts","./src/app/core/nav/nav.component.html","./src/app/core/progressbar/progressbar.component.ts","./src/app/core/progressbar/progressbar.component.html","./src/app/core/search-bar/search-bar.component.ts","./src/app/core/search-bar/search-bar.component.html","./src/app/event/event.component.ts","./src/app/event/event.component.html","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/news/news.component.ts","./src/app/news/news.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/recepies/create-recepie/create-recepie.component.ts","./src/app/recepies/create-recepie/create-recepie.component.html","./src/app/recepies/recepie-detail/recepie-detail.component.ts","./src/app/recepies/recepie-detail/recepie-detail.component.html","./src/app/recepies/recepies/recepies.component.ts","./src/app/recepies/recepies/recepies.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/alert.service.ts","./src/app/services/blogs.service.ts","./src/app/services/communicator.service.ts","./src/app/services/event.service.ts","./src/app/services/feedback.service.ts","./src/app/services/news.service.ts","./src/app/services/recepies.service.ts","./src/app/services/user.service.ts","./src/app/setting/setting.component.ts","./src/app/setting/setting.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","\n<div class=\"form-container\">\n  <mat-card>\n    <img mat-card-image src=\"assets/images/developer/pranaymokal.png\" height=\"550\"/>\n    <mat-card-header>\n      <mat-card-title>\n        Pranay Sanjay Mokal, Technical Lead\n      </mat-card-title>\n      <br/>\n    </mat-card-header>\n    <p style=\"margin-bottom: 20px;margin-left: 10px;margin-top: 20px;\">\n      I am a Full stack developer with over 6 years of experience in Web app development.\n      I work as a Java developer and so far I have been worked with various technologies and frameworks like Spring boot, Spring MVC, JAX-RS REST Services, Spring REST Services,\n      Android, JPA, Hibernate, Spring JDBC Template along with varity of database such as MS SQL, MySQL, Oracle, MongoDB and SQLite.\n      I have diverse experiance in domains such as Healthcare, Storage, Insurance, egovernance.\n    </p>\n    <mat-card-content>\n      <hr>\n      <p style=\"margin-top: 20px;margin-left: 10px;\">\n        Developing project is my hobby and this is totally free of cost project developed by me with help of github pages\n        and heroko for NodeJs app deployment, Angular 10, Angular Material 10, Node js, Express and Mongo DB.\n        Objective behind this project is to encourage people to share them knowledge they have and to help or guide the\n        other people to know the new things.\n        You can also visit my work in progress websites Angular 8- https://vedichealer.github.io and static BootStrap website- https://svssai.github.io\n        Due to busy schedule sometime I give them time on week ends in round robin fasion.\n      </p>\n      <hr>\n    </mat-card-content>\n    <mat-card-actions>\n      <a href=\"mailto:pranay.mokal@gmail.com\"><button mat-raised-button>\n          {{ \"email\" | translate }}\n        </button></a>\n      <button routerLink=\"/feedback\" mat-raised-button>\n        {{ \"feedback\" | translate }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { AboutComponent } from './about/about.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { Error404Component } from './core/error404/error-404.component';\nimport { BlogDetailComponent } from './blogs/blog-detail/blog-detail.component';\nimport { BlogListComponent } from './blogs/blog-list/blog-list.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NewsComponent } from './news/news.component';\nimport { CreateBlogComponent } from './blogs/create-blog/create-blog.component';\nimport { EventComponent } from './event/event.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { RecepiesComponent } from './recepies/recepies/recepies.component';\nimport { CreateRecepieComponent } from './recepies/create-recepie/create-recepie.component';\nimport { RecepieDetailComponent } from './recepies/recepie-detail/recepie-detail.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: RegisterComponent },\n  { path: 'blog-list', component: BlogListComponent },\n  { path: 'createblog', component: CreateBlogComponent },\n  { path: 'blog/:id', component: BlogDetailComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'news', component: NewsComponent },\n  { path: 'event', component: EventComponent },\n  { path: 'setting', component: SettingComponent },\n  { path: 'recepies', component: RecepiesComponent },\n  { path: 'addrecepie', component: CreateRecepieComponent },\n  { path: 'recepie/:id', component: RecepieDetailComponent },\n  { path: '404', component: Error404Component },\n  { path: 'feedback', component: FeedbackComponent },\n  { path: '**', redirectTo: '/' + '404' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy{\n\n  completeDeviceSize: string;\n  deviceSize: string;\n  mediaSubscription: Subscription;\n\n  constructor(private translateService: TranslateService,\n    private title: Title,\n    private meta: Meta,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    public mediaObserver: MediaObserver) {\n\n    this.translateService = translateService;\n    this.translateService.setDefaultLang('en');\n    this.translateService.use('en');\n\n    this.title.setTitle('Angular10-The WriterHub by Pranay Sanjay Mokal');\n    this.router.events.subscribe((event: any) => {\n      if (event instanceof NavigationEnd) {\n        switch (event.urlAfterRedirects) {\n          case '/':\n            this.meta.updateTag({\n              name: 'description',\n              content: 'Angular 10 FullStack WriterHub app by Pranay Sanjay Mokal with Angular Material 10 and NodeJS, MongoDB'\n            });\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n\n    this.mediaSubscription = this.mediaObserver.media$.subscribe((change: MediaChange) => {\n      this.completeDeviceSize  = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n      this.deviceSize = this.completeDeviceSize.substr(1, 2);\n      console.log(this.deviceSize);\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n}\n","<app-nav [deviceSize]=\"deviceSize\"></app-nav>","import { RegisterComponent } from './register/register.component';\nimport { UserService } from './services/user.service';\nimport { HttpModule, BaseRequestOptions, Http } from '@angular/http';\nimport { LoginComponent } from './login/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { APP_CONFIG, AppConfig } from './config/app.config';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppcoreModule } from './appcore/modules/appcore.module';\nimport { CoreModule } from './core/core.module';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpLoaderFactory } from './app.translate.factory';\nimport { AboutComponent } from './about/about.component';\nimport { AlertService } from './services/alert.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewsService } from './services/news.service';\nimport { BlogsService } from './services/blogs.service';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { EventComponent } from './event/event.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { StorageServiceModule } from 'ngx-webstorage-service';\nimport { BlogsModule } from './blogs/blogs.module';\nimport { EventService } from './services/event.service';\nimport { RecepiesComponent } from './recepies/recepies/recepies.component';\nimport { DatePipe } from '@angular/common';\nimport { CreateRecepieComponent } from './recepies/create-recepie/create-recepie.component';\nimport { RecepiesService } from './services/recepies.service';\nimport { RecepieDetailComponent } from './recepies/recepie-detail/recepie-detail.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { FeedbackService } from './services/feedback.service';\nimport { CommunicatorService } from './services/communicator.service';\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    AppcoreModule.forRoot(),\n    CoreModule,\n    StorageServiceModule,\n    AppRoutingModule,\n    BlogsModule,\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    NewsComponent,\n    EventComponent,\n    SettingComponent,\n    RecepiesComponent,\n    CreateRecepieComponent,\n    RecepieDetailComponent,\n    FeedbackComponent\n  ],\n  providers: [\n    { provide: APP_CONFIG, useValue: AppConfig }, DatePipe,\n    UserService, AlertService, BaseRequestOptions, NewsService, BlogsService, EventService,\n    RecepiesService, FeedbackService, CommunicatorService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient} from '@angular/common/http';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","export class Comment {\ncommentText:string;\ncommentAuthor:string;\ncommentlikes:string;\ncommentDislikes:string;\ncommentAdded:string;\nblogId:string;\neventId:string;\nuserId:string;\nrecepieId:string;\ncommentUpdated:string;\n}","export class Dislike{\n    dislikes : number;\n    message : string;\n\n    constructor(dislikes:number, message:string){\n        this.dislikes=dislikes;\n        this.message=message;\n      }\n}","export class Like{\nlikes : number;\nmessage : string;\n\nconstructor(likes:number, message:string){\n    this.likes=likes;\n    this.message=message;\n  }\n}","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MaterialModule } from './material.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    MaterialModule,\n    FlexLayoutModule,\n    TranslateModule,\n  ],\n  exports: [\n    MaterialModule,\n    FlexLayoutModule,\n    TranslateModule,\n  ]\n})\n\nexport class AppcoreModule {\n  static forRoot(): ModuleWithProviders <AppcoreModule>{\n    return {\n      ngModule: AppcoreModule,\n      providers: [\n      ]\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatCardModule,\n    MatSliderModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatListModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatCardModule,\n    MatSliderModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatListModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    FlexLayoutModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule\n  ],\n})\n\nexport class MaterialModule {\n}\n","import { User } from './../../appcore/models/user.model';\nimport { AlertService } from './../../services/alert.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Blog } from '../../appcore/models/blog.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Comment } from '../../appcore/models/comment.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\n\n@Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})\nexport class BlogDetailComponent implements OnInit {\n  panelOpenState = false;\n  blog: Blog;\n  blogId: string;\n  isliked: boolean = false;\n  isDisliked: boolean = false;\n  comments: Comment[];\n  commentsCount: number;\n  userComment: string;\n  months = [\n    { value: 'JAN', viewValue: 'January' },\n    { value: 'FEB', viewValue: 'February' },\n    { value: 'MAR', viewValue: 'March' },\n    { value: 'APR', viewValue: 'April' },\n    { value: 'MAY', viewValue: 'May' },\n    { value: 'JUN', viewValue: 'June' },\n    { value: 'JUL', viewValue: 'July' },\n    { value: 'AUG', viewValue: 'August' },\n    { value: 'SEP', viewValue: 'September' },\n    { value: 'OCT', viewValue: 'October' },\n    { value: 'NOV', viewValue: 'November' },\n    { value: 'DEC', viewValue: 'December' }\n  ];\n  user: User;\n\n  constructor(\n    private route: ActivatedRoute,\n    private blogService: BlogsService,\n    private alertService: AlertService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n  ) { }\n\n  ngOnInit() {\n    const blogDetail = this.blogService.getBlogById(\n      this.blogId = this.route.snapshot.paramMap.get('id')\n    );\n    blogDetail.subscribe(res => {\n      this.blog = res;\n    });\n    this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n      this.comments = response;\n      this.commentsCount = this.comments.length;\n    });\n  }\n\n  like() {\n    if (this.isliked) {\n      this.blogService.like(this.blog._id, false).subscribe(response => {\n        if (response.message === 'please sign in to like') {\n          return;\n        } else {\n          this.blog.blogLikes = response.likes;\n        }\n        this.isliked = false;\n      });\n    } else {\n      this.blogService.like(this.blog._id, true).subscribe(response => {\n        this.alertService.showToaster(response.message);\n        if (response.message === 'please sign in to like') {\n          return;\n        } else {\n          this.blog.blogLikes = response.likes;\n        }\n        this.isliked = true;\n      });\n    }\n  }\n\n  dislike() {\n    if (this.isDisliked) {\n      this.blogService.dislike(this.blog._id, false).subscribe(response => {\n        if (response.message === 'please sign in to Dislike') {\n          return;\n        } else {\n          this.blog.blogDislikes = response.dislikes;\n        }\n        this.isDisliked = false;\n      });\n    } else {\n      this.blogService.dislike(this.blog._id, true).subscribe(response => {\n        this.alertService.showToaster(response.message);\n        if (response.message === 'please sign in to Dislike') {\n          return;\n        } else{\n          this.blog.blogDislikes = response.dislikes;\n        }\n        this.isDisliked = true;\n      });\n    }\n  }\n\n  setLikeStyle() {\n    if (this.isliked)\n      return 'button-liked';\n    else\n      return 'button-notliked';\n  }\n\n  setDisLikeStyle() {\n    if (this.isDisliked)\n      return 'button-liked';\n    else\n      return 'button-notliked';\n  }\n\n  addUserComment() {\n    console.log(this.userComment);\n    if (!this.userComment) {\n      this.alertService.showToaster(\"Add Comment before Proceed.\");\n      return;\n    }\n    let comment = new Comment();\n    comment.blogId = this.blogId;\n    comment.commentText = this.userComment;\n    this.user = this.storageService.get('USER_DATA');\n    if (!this.user) {\n      this.alertService.showToaster(\"Sign In to Continue\");\n      return;\n    }\n    comment.commentAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.blogService.addCommentOnBlog(comment).subscribe(response => {\n      this.alertService.showToaster(\"Your comment has been added\");\n      this.userComment = '';\n      this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n        this.comments = response;\n        this.commentsCount = this.comments.length;\n      });\n    });\n    this.userComment = '';\n    this.alertService.showToaster(\"Your comment has been added\");\n    this.blogService.getCommentsByBlogId(this.blogId).subscribe(response => {\n      this.comments = response;\n      this.commentsCount = this.comments.length;\n    });\n  }\n}\n","<div fxLayout=\"column wrap\" fxLayoutAlign=\"start\" fxFlex=\"100\" flex-wrap=\"nowrap\" *ngIf=\"blog\">\n  <mat-card>\n    <mat-card-header fxLayout=\"row\">\n      <img class=\"mat-card-mat-image\" src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50 \"\n        style=\"border-radius: 50%;\">\n      <div class=\"header-actions\" style=\"margin-left: 20px\">\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>{{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{blog.blogCreated | date}}</mat-card-subtitle>\n      </div>\n      <div fxFlex></div>\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item>Share</button>\n        <button mat-menu-item>Hide</button>\n        <button mat-menu-item>Rate</button>\n      </mat-menu>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </mat-card-header>\n    <img src=\"{{blog.blogImage}}\" class=\"center\" height=\"350\" width=\"350\" style=\"margin-bottom: 20px;\">\n    <mat-card-content>\n      <pre class=\"preclass\" style=\"text-justify: inter-word;margin-top: 40px;font-size:18px;\">\n           {{blog.blogContent}} </pre>\n    </mat-card-content>\n    <mat-card-footer>\n      <button [ngClass]=\"setLikeStyle()\" mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\"\n        matBadgeColor=\"primary\" (click)=\"like()\">\n        <mat-icon>thumb_up</mat-icon>Like\n      </button>\n      <button [ngClass]=\"setDisLikeStyle()\" mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\"\n        matBadgeColor=\"warn\" (click)=\"dislike()\">\n        <mat-icon>thumb_down</mat-icon>Dislike\n      </button>\n      <button class=\"mat-icon-button\" aria-label=\"toggle \">\n        <mat-icon mat-svg-icon=\"mat-toggle-arrow \"></mat-icon>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n      </button>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <span matBadge=\"{{commentsCount}}\" matBadgePosition=\"after above\" matBadgeColor=\"primary\"\n              matBadgeOverlap=\"false\" style=\"margin-top: 13px;margin-bottom: 10px;\">Comments</span>\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"example-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Leave a comment\" [(ngModel)]=\"userComment\"></textarea>\n          </mat-form-field>\n          <button mat-raised-button color=\"primary\" style=\"width: 100px;margin-bottom: 10px;\"\n            (click)=\"addUserComment()\">Comment</button>\n        </div>\n        <mat-list>\n          <mat-divider></mat-divider>\n          <mat-list-item *ngFor=\"let comment of comments\">\n            <mat-icon matListIcon style=\"font-size: 40px;margin-bottom: 20px;margin-right: 10px;\">account_circle\n            </mat-icon>\n            <span>\n              <h4 matLine style=\"margin-left: 15px;margin-top: 15px;font-size: 18px;\"> {{ comment.commentAuthor }} </h4>\n              <p matLine style=\"word-break: break-all; margin-left: 15px;margin-bottom: 5px;\">\n                {{comment.commentText}}\n              </p>\n            </span>\n            <mat-divider></mat-divider>\n          </mat-list-item>\n        </mat-list>\n      </mat-expansion-panel>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Blog } from '../../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n  blogs: Blog[];\n  blogCount: Number = 0;\n  length = 0;\n  pageIndex = 0;\n  pageSize = 6;\n  pageEvent: PageEvent;\n  pageSizeOptions: number[] = [6, 12, 18, 24, 30];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private blogService: BlogsService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.getAllBlogs();\n  }\n\n  ngOnInit() { }\n\n  getAllBlogs(): void {\n    this.blogService.getAllblogs().subscribe(\n      blogList => {\n        this.blogCount = blogList.length;\n        this.blogs = blogList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readBlog(blogId: string) {\n    this.router.navigate(['/blog/' + blogId]);\n  }\n\n  pageChange($event) {\n    const startIndex = $event.pageIndex * $event.pageSize;\n    let endIndex = 0;\n    if ($event.previousPageIndex < $event.pageIndex) {\n      endIndex = $event.pageSize + $event.pageSize;\n    } else {\n      endIndex = $event.pageSize;\n    }\n    this.blogs = this.blogs.slice(startIndex, endIndex);\n  }\n}\n","<img src=\"assets/images/blogwall.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\" />\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"flex-start\">\n  <ng-container *ngFor=\"let blog of blogs\">\n    <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\"\n      style=\"margin-bottom: 20px;\">\n      <mat-card-header fxLayout=\"row\" style=\"margin-bottom:20px;\">\n        <div mat-card-avatar>\n          <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius: 50%;\" />\n        </div>\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>Author : {{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{ blog.blogCreated | date }} <mat-chip color=\"primary\" selected>{{blog.blogCategory}}\n          </mat-chip>\n        </mat-card-subtitle>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n          <button mat-menu-item>Rate</button>\n        </mat-menu>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n\n      </mat-card-header>\n      <img class=\"mat-card-image\" src=\"{{blog.blogImage}}\" height=\"200\" />\n\n      <mat-card-content style=\"height: 60px;overflow: hidden;\">\n        <p>{{ blog.blogContent }}</p>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        <button mat-button (click)=\"readBlog(blog._id)\">Read More..</button>\n      </mat-card-footer>\n    </mat-card>\n  </ng-container>\n</div>\n\n<mat-paginator *ngIf=\"blogs\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"pageChange($event)\">\n</mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppcoreModule } from '../appcore/modules/appcore.module';\nimport { BlogsService } from './../services/blogs.service';\nimport { BlogDetailComponent } from './blog-detail/blog-detail.component';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport { CreateBlogComponent } from './create-blog/create-blog.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AppcoreModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    BlogDetailComponent,\n    BlogListComponent,\n    CreateBlogComponent\n  ],\n  entryComponents: [\n  ],\n  providers: [\n    BlogsService\n  ]\n})\n\nexport class BlogsModule {\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Router } from '@angular/router';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject } from '@angular/core';\nimport { User } from '../../appcore/models/user.model';\n\n@Component({\n  selector: 'app-create-blog',\n  templateUrl: './create-blog.component.html',\n  styleUrls: ['./create-blog.component.css']\n})\nexport class CreateBlogComponent {\n  createBlog: FormGroup;\n  @ViewChild('form') ngForm;\n  error: string;\n  imageSrc = '';\n  user: User;\n  model = {\n    blogName: '',\n    blogState: '',\n    blogImage: '',\n    blogCategory: '',\n    blogContent: '',\n    blogTags: '',\n    blogTemplate: ''\n  };\n\n  categories = [\n    { value: 'education', viewValue: 'Education' },\n    { value: 'history', viewValue: 'History' },\n    { value: 'science', viewValue: 'Science' },\n    { value: 'economic', viewValue: 'Economics' },\n    { value: 'health', viewValue: 'Health' },\n    { value: 'news', viewValue: 'News' },\n    { value: 'entertainment', viewValue: 'Entertainment' },\n    { value: 'other', viewValue: 'Other' }\n  ];\n  templates = [\n    { value: 'select', viewValue: 'Select' },\n    { value: 'grid', viewValue: 'Grid Template' },\n    { value: 'side', viewValue: 'Side Template' },\n    { value: 'expandable', viewValue: 'Expandable Template' }\n  ];\n\n  constructor(private blogsService: BlogsService,\n    private formBuilder: FormBuilder, private router: Router, @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.createBlog = this.formBuilder.group({\n      'blogName': ['', [Validators.required]],\n      'blogContent': ['', [Validators.required]],\n      'blogTemplate': ['', [Validators.required]],\n      'blogTags': ['', Validators.required],\n      'blogCategory': ['', Validators.required],\n      'blogImage': [''],\n    });\n  }\n\n  createNewBlog(newBlog) {\n    newBlog.blogImage = this.imageSrc;\n    newBlog.blogState = 'created';\n    this.user = this.storageService.get('USER_DATA');\n    newBlog.blogAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.blogsService.createBlog(newBlog).subscribe((blogs) => {\n      this.router.navigate(['/blog-list']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/blog-list']);\n      }\n    });\n  }\n\n  publishBlog(model) {\n    model.blogImage = this.imageSrc;\n    model.blogState = 'published';\n    this.blogsService.createBlog(model).subscribe((blogs) => {\n      this.router.navigate(['/blog-list']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/blog-list']);\n      }\n    });\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<div class=\"form-container\">\n  <mat-toolbar color=\"primary\">\n    <h1>{{ \"createblog\" | translate }}</h1>\n  </mat-toolbar>\n  <mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"createBlog\" #form=\"ngForm\" (ngSubmit)=\"createNewBlog(createBlog.value)\">\n        <mat-form-field class=\"input-field\">\n          <input matInput class=\"form-control\" placeholder=\"{{'blogname' | translate}}\" formControlName=\"blogName\"\n            [(ngModel)]=\"model.blogName\" />\n        </mat-form-field>\n        <mat-form-field class=\"input-field\">\n          <mat-select placeholder=\"Blog categories\" placeholder=\"{{'blogcategories' | translate}}\"\n            formControlName=\"blogCategory\" [(ngModel)]=\"model.blogCategory\">\n            <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.value\">\n              {{ cat.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"input-field\">\n          <textarea matInput class=\"form-control\" placeholder=\"{{'writebloghere' | translate}}\"\n            formControlName=\"blogContent\" rows=\"20\" [(ngModel)]=\"model.blogContent\"></textarea>\n        </mat-form-field>\n\n        <mat-form-field class=\"input-field\">\n          <input matInput placeholder=\"Add Tags\" formControlName=\"blogTags\" [(ngModel)]=\"model.blogTags\" />\n        </mat-form-field>\n\n        <div>\n          <img [src]=\"imageSrc\" style=\"max-width:300px;max-height:300px\" />\n          <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\"\n            formControlName=\"blogImage\" />\n        </div>\n\n        <mat-card-actions>\n          <button type=\"submit\" mat-raised-button>{{ \"createblog\" | translate }}</button>\n          <button mat-raised-button (click)='publishBlog(model)'>{{ \"publishblog\" | translate }}</button>\n        </mat-card-actions>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>","import { InjectionToken } from '@angular/core';\n\nimport { IAppConfig } from './iapp.config';\n\nexport let APP_CONFIG = new InjectionToken('app.config');\n\nconst baseDomain = 'https://writinghub.herokuapp.com';\n//const baseDomain = 'http://localhost:3000';\n\nexport const AppConfig: IAppConfig = {\n  appRestPoints: {\n    blogs: baseDomain + '/api/v1/blogs',\n    users: baseDomain + '/api/v1/users',\n    events: baseDomain + '/api/v1/events',\n    recepies: baseDomain + '/api/v1/recepies',\n    comments: baseDomain + '/api/v1/comments',\n    images: baseDomain + '/api/v1/images',\n    login: baseDomain + '/api/v1/auth/login',\n    register: baseDomain + '/api/v1/auth/register',\n    feedbacks: baseDomain + '/api/v1/feedbacks',\n    news: 'https://newsapi.org/v2/top-headlines?country=',\n    newsapi: '&apiKey=3e49887986274a71b3aecae7a3830f90'\n  },\n  snackBarDuration: 3000,\n  repositoryURL: 'https://github.com/pranaymokal/WriterHub2.0.git'\n};\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport { LoggerService } from './logger.service';\n\nimport { NavComponent } from './nav/nav.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppcoreModule } from '../appcore/modules/appcore.module';\nimport { RouterModule } from '@angular/router';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { Error404Component } from './error404/error-404.component';\nimport { ProgressbarComponent } from './progressbar/progressbar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    AppcoreModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    NavComponent,\n    FooterComponent\n  ],\n  declarations: [\n    NavComponent,\n    FooterComponent,\n    SearchBarComponent,\n    Error404Component,\n    ProgressbarComponent\n  ],\n  providers: [\n    LoggerService,\n  ]\n})\n\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error-404',\n  templateUrl: './error-404.component.html',\n  styleUrls: ['./error-404.component.css']\n})\n\nexport class Error404Component {\n  constructor() {\n  }\n}\n","<!-- <h3 class=\"section-title\"><strong>404</strong></h3>\n<h1 class=\"section-title\">{{'error404' | translate}}</h1>\n<p class=\"explanation\">{{'pagenotfound' | translate}}</p> -->\n\n<div class=\"form-container\">\n  <mat-toolbar color=\"primary\">\n        <h3>We Couldn't Find This Page </h3>\n  </mat-toolbar>\n  <mat-card>\n      <mat-card-content >\n        <h1  style=\"color:#5714ce\" class=\"mat-display-2\" >Page not found </h1>\n        <h2  style=\"text-align:center;color:#5714ce\" class=\"mat-display-4\">404</h2>\n      </mat-card-content>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { version } from '../../../../package.json';\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\n\nexport class FooterComponent {\n  currentLang: string;\n  public version: string = version;\n\n  constructor(private translateService: TranslateService) {\n    this.currentLang = this.translateService.currentLang;\n  }\n}\n","<footer>\n    <div fxFlex fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center center\" class.xs=\"footer-xs\">\n        <span> © {{ 'writerhub' | translate }} 2021, </span>\n        <span> &nbsp; {{ 'appdeveloper' | translate }} :\n            <a style=\"color:aliceblue;\" href=\"mailto:pranay.mokal@gmail.com\">{{ 'pranaymokal' | translate }},</a></span>\n        <span> &nbsp; App version : {{version}}, Last Updated 18-07-2021. </span>\n    </div>\n</footer>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n  static log(msg: string): void {\n    //console.log(msg);\n  }\n\n  static error(msg: string, obj = {}): void {\n    //console.error(msg, obj);\n  }\n}\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { TranslateService } from '@ngx-translate/core';\nimport { APP_CONFIG } from '../../config/app.config';\nimport { IAppConfig } from '../../config/iapp.config';\nimport { Component, Inject, OnInit, Input } from '@angular/core';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Router } from '@angular/router';\nimport { User } from '../../appcore/models/user.model';\nimport { CommunicatorService } from '../../services/communicator.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  appConfig: any;\n  menuItems: any[];\n  progressBarMode: string;\n  currentLang: string;\n  apptitle: string;\n  USER_DATA = 'USER_DATA';\n  USER_TOKEN = 'USER_TOKEN';\n  isLoggedIn: boolean;\n  user: User;\n  navItems: any[];\n  profilePhoto = '/assets/images/default.png';\n  @Input() deviceSize : string;\n\n  constructor(\n    @Inject(APP_CONFIG) appConfig: IAppConfig,\n    private translateService: TranslateService,\n    private router: Router,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private communicatorService: CommunicatorService\n  ) {\n    this.appConfig = appConfig;\n    this.translateService = translateService;\n    this.loadMenus();\n    this.loadNavigationMenus();\n    this.currentLang = this.translateService.currentLang;\n    this.user = this.storageService.get(this.USER_DATA);\n    this.communicatorService.isLoggedIn.subscribe(value => {\n      this.isLoggedIn = value;\n      this.user = this.storageService.get(this.USER_DATA);\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"nav device size\",this.deviceSize)\n  }\n\n  changeLanguage(language: string): void {\n    this.translateService.use(language).subscribe(() => {\n      this.loadMenus();\n      this.loadNavigationMenus();\n    });\n  }\n\n  private loadMenus(): void {\n    this.translateService\n      .get(['about', 'blogs', 'recepies'], {})\n      .subscribe((texts: any) => {\n        this.menuItems = [\n          { link: '/blog-list', name: texts['blogs'] },\n          { link: '/recepies', name: texts['recepies'] },\n          { link: '/about', name: texts['about'] }\n        ];\n      });\n  }\n\n  private loadNavigationMenus(): void {\n    this.translateService\n      .get(\n        [\n          'blogs',\n          'recepies',\n          'feedback'\n        ],\n        {}\n      )\n      .subscribe((texts: any) => {\n        this.navItems = [\n          { link: '/blog-list', name: texts['blogs'] },\n          { link: '/recepies', name: texts['recepies'] },\n          { link: '/feedback', name: texts['feedback'] },\n        ];\n      });\n  }\n\n  logout() {\n    this.storageService.remove(this.USER_TOKEN);\n    this.storageService.remove(this.USER_DATA);\n    this.communicatorService.isLoggedIn.next(false);\n    this.router.navigate(['']);\n  }\n}\n","<mat-sidenav-container fullscreen>\n  <mat-sidenav #start over>\n    <mat-list>\n      <div>\n        <mat-card *ngIf=\"user\">\n          <mat-divider [vertical]=\"true\" [inset]=\"true\"></mat-divider>\n          <img src=\"{{profilePhoto}}\" style=\"border-radius: 40%;\" width=\"200\" />\n          <mat-card-title-group>\n            <mat-card-title>{{user.firstName + \" \" + user.lastName }}</mat-card-title>\n            <mat-card-subtitle>{{user.username}}</mat-card-subtitle>\n          </mat-card-title-group>\n        </mat-card>\n      </div>\n      <mat-nav-list>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/setting\" *ngIf=\"isLoggedIn\">\n          {{ \"settings\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/profile\" *ngIf=\"isLoggedIn\">\n          {{ \"profile\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/createblog\" *ngIf=\"isLoggedIn\">\n          {{ \"createblog\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/addrecepie\" *ngIf=\"isLoggedIn\">\n          {{ \"addrecepie\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/blog-list\" *ngIf=\"isLoggedIn\">\n          {{ \"myblogs\" | translate }} </a>\n\n        <a *ngFor=\"let navItem of navItems\" mat-list-item (click)=\"start.close()\" routerLinkActive\n          #routerLinkActiveInstance=\"routerLinkActive\" [attr.tabindex]=\"routerLinkActiveInstance.isActive ? 0 : -1\"\n          [routerLink]=\"[navItem.link]\">\n          {{ navItem.name }}\n        </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/login\" *ngIf=\"!isLoggedIn\">\n          {{ \"signin\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\" routerLink=\"/about\" *ngIf=\"!isLoggedIn\">\n          {{ \"about\" | translate }} </a>\n        <a mat-list-item tabindex=\"-1\" (click)=\"start.close()\"> {{ \"close\" | translate }} </a>\n      </mat-nav-list>\n    </mat-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n\n    <mat-toolbar color=\"primary\" class=\"sticky\">\n      <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n        <div fxLayout=\"row\">\n          <button mat-button (click)=\"start.open('mouse')\">\n            <mat-icon>menu</mat-icon>\n          </button>\n          <button mat-button routerLink=\"\">\n            <span class=\"logo\"> {{ \"writerhub\" | translate }} </span>\n          </button>\n          <div *ngIf=\"deviceSize !=='xs'\" fxLayout=\"row\">\n            <a mat-button *ngFor=\"let item of menuItems\" routerLink=\"{{ item.link }}\">\n              {{ item.name }}\n            </a>\n            <button mat-button [matMenuTriggerFor]=\"menu\">\n              {{ \"more\" | translate }}\n            </button>\n            <mat-menu #menu=\"matMenu\">\n              <button routerLink=\"/feedback\" mat-menu-item>{{\"feedback\"  | translate }}</button>\n            </mat-menu>\n          </div>\n        </div>\n        <div fxLayout=\"row\">\n          <div *ngIf=\"deviceSize ==='xs'\">\n            <button mat-button [matMenuTriggerFor]=\"matmenu\" style=\"margin-left: 5px\">\n              Language\n            </button>\n            <mat-menu #matmenu=\"matMenu\">\n              <button mat-menu-item (click)=\"changeLanguage('en')\">\n                <span> English </span>\n              </button>\n              <button mat-menu-item (click)=\"changeLanguage('mh')\">\n                <span> मराठी </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuaccount\" *ngIf=\"isLoggedIn\">\n              <mat-icon>account_circle</mat-icon>\n            </button>\n            <mat-menu #menuaccount=\"matMenu\">\n              <button mat-menu-item  routerLink=\"/profile\" routerLinkActive=\"router-link-active\" ><span> {{ \"myaccount\" | translate }} </span></button>\n              <button mat-menu-item routerLink=\"/setting\">\n                <span> {{ \"settings\" | translate }} </span>\n              </button>\n              <button mat-menu-item (click)=\"logout()\">\n                <span> {{ \"logout\" | translate }} </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"signinmenu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n          </div>\n          <div *ngIf=\"!(deviceSize ==='xs')\" fxLayoutAlign=\"end\">\n            <button mat-button [matMenuTriggerFor]=\"matmenu\" style=\"margin-left: 5px\">\n              Language\n            </button>\n            <mat-menu #matmenu=\"matMenu\">\n              <button mat-menu-item (click)=\"changeLanguage('en')\">\n                <span> English </span>\n              </button>\n              <button mat-menu-item (click)=\"changeLanguage('mh')\">\n                <span> मराठी </span>\n              </button>\n            </mat-menu>\n            <button mat-icon-button [matMenuTriggerFor]=\"menuaccount\" *ngIf=\"isLoggedIn\">\n              <mat-icon>account_circle</mat-icon>\n            </button>\n            <mat-menu #menuaccount=\"matMenu\">\n              <button mat-menu-item routerLink=\"/profile\"><span> {{ \"myaccount\" | translate }} </span></button>\n              <button mat-menu-item routerLink=\"/setting\">\n                <span> {{ \"settings\" | translate }} </span>\n              </button>\n              <button mat-menu-item (click)=\"logout()\">\n                <span> {{ \"logout\" | translate }} </span>\n              </button>\n            </mat-menu>\n            <a [routerLink]=\"['/login']\" mat-button *ngIf=\"!isLoggedIn\">\n              {{ \"signin\" | translate }}\n            </a>\n          </div>\n        </div>\n      </mat-toolbar-row>\n\n      <mat-toolbar-row *ngIf=\"(deviceSize ==='xs')\" fxLayoutAlign=\"left\">\n        <a mat-button *ngFor=\"let item of menuItems\" routerLink=\"{{ item.link }}\">\n          {{ item.name }}\n        </a>\n        <a mat-button [matMenuTriggerFor]=\"menu\">\n          {{ \"more\" | translate }}\n        </a>\n        <mat-menu #menu=\"matMenu\">\n          <button routerLink=\"/feedback\" mat-menu-item>{{\"feedback\"  | translate }}</button>\n        </mat-menu>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <mat-menu #signinmenu=\"matMenu\" fxLayoutAlign=\"end\">\n      <a mat-menu-item [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" *ngIf=\"!isLoggedIn\"> {{ \"signin\" | translate }}</a>\n      <a mat-menu-item  [routerLink]=\"['/about']\" routerLinkActive=\"router-link-active\" >{{ \"about\" | translate }}</a>\n    </mat-menu>\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n    <app-footer></app-footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progressbar',\n  templateUrl: './progressbar.component.html',\n  styleUrls: ['./progressbar.component.css']\n})\nexport class ProgressbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>","import { Component } from '@angular/core';\nimport { LoggerService } from '../logger.service';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppConfig } from '../../config/app.config';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css'],\n  providers: [\n    LoggerService\n  ]\n})\n\nexport class SearchBarComponent {\n\n  constructor(private router: Router) {\n  }\n}\n","<mat-autocomplete>\n    <mat-form-field>\n        <input matInput placeholder=\"{{ 'search' | translate }}!\">\n    </mat-form-field>\n</mat-autocomplete>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { EventService } from './../services/event.service';\nimport { AlertService } from './../services/alert.service';\nimport { MyEvent } from '../appcore/models/myevent.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent implements OnInit {\n  eventRegisterationForm: FormGroup;\n  events: MyEvent[];\n  event: MyEvent;\n  error: any;\n  imageSrc = '';\n\n  constructor(private formBuilder: FormBuilder, private eventService: EventService, private alertService: AlertService,\n    private router: Router) {\n    this.eventRegisterationForm = this.formBuilder.group({\n      'eventName': ['', [Validators.required]],\n      'eventDescription': ['', [Validators.required]],\n      'eventStartDate': ['', [Validators.required]],\n      'eventEndDate': ['', [Validators.required]],\n      'eventLocation': ['', [Validators.required]],\n      'eventImage': [],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllEvents();\n  }\n\n  registerEvent(eventRegisterationForm) {\n    eventRegisterationForm.eventImage = this.imageSrc;\n    this.eventService.createMyEvent(eventRegisterationForm).subscribe((events) => {\n      this.router.navigate(['/event']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'Failed to create event';\n      }\n      if (response.status === 403) {\n        this.router.navigate(['/login']);\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/event']);\n      }\n    });\n    this.getAllEvents();\n  }\n\n  getAllEvents() {\n    this.eventService.getAllMyEvents().subscribe(eventList => {\n      this.events = eventList;\n    });\n  }\n\n  getEventById(eventId: string) {\n\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<div class=\"form-container\" style=\"margin-bottom: 100px;\">\n    <mat-toolbar color=\"primary\">\n        {{ \"events\" | translate }}\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"eventRegisterationForm\" #form=\"ngForm\"\n                (ngSubmit)=\"registerEvent(eventRegisterationForm.value)\">\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventname' | translate }}\"\n                        formControlName=\"eventName\" />\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventdescription' | translate }}\"\n                        formControlName=\"eventDescription\" />\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"picker1\" placeholder=\"{{ 'startdate' | translate }}\"\n                        formControlName=\"eventStartDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"{{ 'enddate' | translate }}\"\n                        formControlName=\"eventEndDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"{{ 'eventLocation' | translate }}\"\n                        formControlName=\"eventLocation\" />\n                </mat-form-field>\n\n                <div>\n                    <img [src]=\"imageSrc\" style=\"max-width:100px;max-height:100px\" />\n                    <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\"\n                        (change)=\"handleInputChange($event)\" formControlName=\"eventImage\" />\n                </div>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <br />\n                <button mat-raised-button color=\"primary\" type=\"submit\">\n                    {{ \"createevent\" | translate }}\n                </button>\n                <button mat-raised-button color=\"accent\" type=\"reset\" style=\"margin-left: 20px;\">\n                    {{ \"reset\" | translate }}\n                </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<div class=\"form-container\">\n\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\" fxLayoutAlign=\"flex-start\">\n        <ng-container *ngFor=\"let event of events\">\n            <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n                <mat-card-header>\n                    <mat-card-title>{{event.eventName}}</mat-card-title>\n                </mat-card-header>\n                <img class=\"mat-card-mat-image\" src=\"{{event.eventImage}}\" height=\"100\" width=\"200\" />\n                <mat-card-footer>\n                    <mat-card-subtitle style=\"text-align: center;\">{{event.eventDescription}}</mat-card-subtitle>\n                    <mat-card-subtitle style=\"text-align: center;\"> Start Date : {{event.eventStartDate}} To End Date :\n                        {{event.eventEndDate}} </mat-card-subtitle>\n                </mat-card-footer>\n            </mat-card>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from '../services/feedback.service';\nimport { AlertService } from '../services/alert.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Feedback } from '../appcore/models/feedback.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  feedback: Feedback;\n  feedbacks: Feedback[];\n  newFeedbackForm: FormGroup;\n  error: any;\n  constructor(private feedBackService: FeedbackService, private formBuilder: FormBuilder, private alertService: AlertService,\n    private router: Router\n  ) {\n    this.newFeedbackForm = this.formBuilder.group({\n      'senderName': ['', [Validators.required]],\n      'senderEmail': ['', [Validators.required]],\n      'senderFeedback': ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllFeedbacks();\n  }\n\n  getAllFeedbacks() {\n    this.feedBackService.getAllFeedbacks().subscribe((feedbacks) => {\n      this.feedbacks = feedbacks;\n    });\n  }\n\n  sendFeedback(newFeedback) {\n    this.feedBackService.sendFeedback(newFeedback).subscribe((feedback) => {\n      this.router.navigate(['/']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'Failed to send feedback';\n        this.alertService.showToaster('Failed to send feedback');\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/']);\n        this.alertService.showToaster('Feedback sent sucessfully');\n      }\n    });\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n        <h2>\n            <span>{{ \"feedback\" | translate }}</span>\n        </h2>\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newFeedbackForm\" #form=\"ngForm\" (ngSubmit)=\"sendFeedback(newFeedbackForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'name' | translate }}\" formControlName=\"senderName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'email' | translate }}\" formControlName=\"senderEmail\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <textarea matInput class=\"form-control\" placeholder=\"{{'typefeedbackhere' | translate}}\"\n                        formControlName=\"senderFeedback\" rows=\"15\"></textarea>\n                </mat-form-field>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" color=\"accent\" type=\"reset\">\n                        {{ \"reset\" | translate }}\n                    </button>\n                    <button type=\"submit\" mat-raised-button color=\"primary\" class=\"input-button\">\n                        {{ \"feedback\" | translate }}\n                    </button>\n                </mat-card-actions>\n            </form>\n        </mat-card-content>\n        <mat-card-footer></mat-card-footer>\n    </mat-card>\n</div>\n<!-- <div class=\"form-container\">\n    <mat-list style=\"margin-top: 60px;\">\n        <mat-list-item style=\"margin-bottom: 60px;\" *ngFor=\"let feedback of feedbacks\">\n            <mat-card flex-wrap=\"nowrap\" style=\"width:100%;\">\n                <mat-card-header>\n                    <mat-card-title>\n                        Feedback from : {{ feedback.senderName }}\n                    </mat-card-title>\n                    <mat-card-subtitle>Feedback : {{\n                        feedback.senderFeedback\n                        }}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </mat-list-item>\n    </mat-list>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../appcore/models/user.model';\nimport { UserService } from '../services/user.service';\nimport { Blog } from '../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlogsService } from '../services/blogs.service';\n\n@Component({\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n  users: User[] = [];\n  blogs: Blog[] = null;\n  blogCount: number;\n\n  constructor(\n    private userService: UserService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router, private blogService: BlogsService) {\n\n  }\n\n  ngOnInit() {\n\n    this.getAllBlogs();\n  }\n\n  getAllBlogs(): void {\n    this.blogService.getAllblogs().subscribe(\n      blogList => {\n        this.blogCount = blogList.length;\n        this.blogs = blogList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readBlog(_id: string) {\n    this.router.navigate(['/blog/' + _id]);\n  }\n}\n","<img src=\"assets/images/blogfront.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\" />\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"flex-start\">\n  <ng-container *ngFor=\"let blog of blogs\" style=\"margin-top: 20px;\">\n    <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"80%\">\n      <mat-card-header fxLayout=\"row\">\n        <div mat-card-avatar>\n          <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius: 50%;\" />\n        </div>\n        <mat-card-title>{{ blog.blogName }}</mat-card-title>\n        <mat-card-subtitle>{{ blog.blogAuthor }}</mat-card-subtitle>\n        <mat-card-subtitle>Posted on {{ blog.blogCreated | date }} <mat-chip color=\"primary\" selected>{{blog.blogCategory}}\n          </mat-chip>\n        </mat-card-subtitle>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n        </mat-menu>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </mat-card-header>\n      <img class=\"mat-card-image\" src=\"{{blog.blogImage}}\" style=\"height: 200px;\" />\n      <mat-card-content style=\"height: 60px;overflow: hidden;\">\n        <p>{{ blog.blogContent }}</p>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{blog.blogLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{blog.blogDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button mat-button matBadge=\"{{blog.blogViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        <button mat-button (click)=\"readBlog(blog._id)\">Read More..</button>\n      </mat-card-footer>\n    </mat-card>\n  </ng-container>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AlertService } from '../../services/alert.service';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { CommunicatorService } from 'src/app/services/communicator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  loading = false;\n  newLoginForm: FormGroup;\n  canVote = false;\n  error: string;\n  USER_TOKEN = 'USER_TOKEN';\n  isLoggedIn = false;\n  USER_DATA = 'USER_DATA';\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private alertService: AlertService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService, private communicatorService: CommunicatorService) { }\n\n  ngOnInit() {\n    this.newLoginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  login(newLoginForm) {\n    if (newLoginForm.username === '') {\n      this.alertService.showToaster('Please enter username');\n      return;\n    } else if (newLoginForm.password === '') {\n      this.alertService.showToaster('Please enter password');\n      return;\n    }\n    this.userService.login(newLoginForm).subscribe(\n      data => {\n        if (data.status !== 200) {\n          this.error = 'Failed to login';\n          this.alertService.showToaster('Failed to login');\n          return;\n        }\n        const response = data.json();\n        this.storageService.set(this.USER_TOKEN, response.token);\n        this.storageService.set(this.USER_DATA, response.user);\n        this.isLoggedIn = response.auth;\n        this.communicatorService.isLoggedIn.next(true);\n        this.router.navigate(['']);\n        this.alertService.showToaster('Welcome to WriterHub, Logged in successfully');\n      },\n      error => {\n        this.loading = false;\n        if (error.status === 404) {\n          this.error = 'Username or password is incorrect';\n          this.alertService.showToaster('Username or password is incorrect');\n          return;\n        }\n        if (error.status === 504) {\n          this.error = 'Service not available';\n          this.alertService.showToaster('Service not available');\n          return;\n        }\n        if (error.status === 401) {\n          this.error = 'Username or password is incorrect';\n          this.alertService.showToaster('Username or password is incorrect');\n          return;\n        }\n      }\n    );\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n        <h2>\n            <span>{{ \"loginform\" | translate }}</span>\n        </h2>\n    </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newLoginForm\" #form=\"ngForm\" (ngSubmit)=\"login(newLoginForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'username' | translate }}\" formControlName=\"username\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'password' | translate }}\"\n                        formControlName=\"password\" />\n                </mat-form-field>\n                <span style=\"color:red\" *ngIf=\"error\">{{ error | translate }}</span>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" routerLink=\"/signup\" color=\"accent\" type=\"button\">\n                        {{ \"signup\" | translate }}\n                    </button>\n                    <button type=\"submit\" mat-raised-button class=\"input-button\">\n                        {{ \"login\" | translate }}\n                    </button>\n                </mat-card-actions>\n\n            </form>\n        </mat-card-content>\n        <mat-card-footer></mat-card-footer>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from './../services/news.service';\nimport { News } from './../appcore/models/news.model';\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  news: News[] = [];\n\n  news_categories = [\n    { value: 'business', viewValue: 'Business' },\n    { value: 'technology', viewValue: 'Technology' },\n    { value: 'entertainment', viewValue: 'Entertainment' },\n    { value: 'health', viewValue: 'Health' },\n    { value: 'science', viewValue: 'Science' },\n    { value: 'sports', viewValue: 'Sports' }\n  ];\n  newsources = [{ value: 'the-times-of-india', viewValue: 'Times of India' }, { value: 'google-news-in', viewValue: 'Google News' },\n  { value: 'the-hindu', viewValue: 'The Hindu' }, { value: 'cnn', viewValue: 'CNN' }];\n\n  countries = [\n    { value: 'in', viewValue: 'India' },\n    { value: 'au', viewValue: 'Australia' },\n    { value: 'ar', viewValue: 'Austria' },\n    { value: 'br', viewValue: 'Brazil' },\n    { value: 'cn', viewValue: 'China' },\n    { value: 'in', viewValue: 'India' },\n    { value: 'id', viewValue: 'Indonation' },\n    { value: 'fr', viewValue: 'France' },\n    { value: 'de', viewValue: 'Germany' },\n    { value: 'it', viewValue: 'Italy' },\n    { value: 'uk', viewValue: 'United Kingdom' },\n    { value: 'us', viewValue: 'United States' }\n  ];\n  selectedCountry = '';\n  selectedCategory = '';\n  selectedSource = '';\n  selectedCntry = 'in';\n  selectedCat = 'business';\n  \n  constructor(private newsService: NewsService) {\n    this.news = null;\n    this.newsService.getAllNews('in', 'business').subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n  selectOneCountry(selected) {\n    this.selectedCountry = selected.value;\n    this.news = null;\n    this.newsService.getAllNews(this.selectedCountry, 'business').subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n  selectOneCategory(selected) {\n    this.selectedCategory = selected.value;\n    this.news = null;\n    this.newsService.getAllNews(this.selectedCountry, this.selectedCategory).subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n\n\n  selectOneSource(selected) {\n    this.selectedSource = selected.value;\n    this.news = null;\n    this.newsService.getAllNewsBySource(this.selectedSource).subscribe(\n      data => {\n        this.news = data;\n      }, err => {\n      }\n    );\n  }\n  ngOnInit() {\n  }\n\n}\n","<div class=\"view-container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\"\n  *ngIf=\"news\">\n\n  <div class=\"item item-1\" fxFlex=\"15%\">\n    <mat-accordion>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select Country </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select Country\" [(ngModel)]=\"selectedCntry\"\n            (selectionChange)=\"selectOneCountry($event)\">\n            <mat-option *ngFor=\"let country of countries\" [value]=\"country.value\">\n              {{ country.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select Categories </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select Categories\" [(ngModel)]=\"selectedCat\"\n            (selectionChange)=\"selectOneCategory($event)\">\n            <mat-option *ngFor=\"let news_cat of news_categories\" [value]=\"news_cat.value\">\n              {{ news_cat.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Select News source </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-select placeholder=\"Select News Sources\" (selectionChange)=\"selectOneSource($event)\">\n            <mat-option *ngFor=\"let newssource of newsources\" [value]=\"newssource.value\">\n              {{ newssource.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n  <div class=\"item item-2\" fxFlex>\n    <mat-toolbar color=\"primary\" style=\"margin-left: 15px;\">\n      {{ \"news\" | translate }} Powered by newsapi.org\n    </mat-toolbar>\n    <mat-list style=\"margin-top: 60px;\">\n      <mat-list-item style=\"margin-bottom: 150px;\" *ngFor=\"let newOne of news\">\n        <mat-card flex-wrap=\"nowrap\" style=\"width:100%;\">\n          <mat-card-header>\n            <div mat-card-avatar>\n              <img src=\"{{newOne.urlToImage}}\" width=\"100\" height=\"50\" style=\"margin-right: 50px;\" />\n            </div>\n            <mat-card-title style=\"margin-left: 50px;\">\n              {{ newOne.title }}\n            </mat-card-title>\n            <mat-card-subtitle style=\"margin-left: 50px;\">{{\n              newOne.description\n              }}</mat-card-subtitle>\n            <mat-card-subtitle style=\"margin-left: 50px;\">\n              {{ newOne.author }}\n            </mat-card-subtitle>\n            <mat-card-subtitle style=\"margin-left: 50px;\">\n              Posted on {{ newOne.publishedAt }}\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-actions layout=\"row \" layout-align=\"start center \">\n            <a mat-raised-button href=\"{{ newOne.url }}\" target=\"_blank\">Read More</a>\n          </mat-card-actions>\n        </mat-card>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-paginator [length]=\"news.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n      </mat-paginator>\n    </mat-list>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { User } from '../appcore/models/user.model';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  sharePhoto: FormGroup;\n  error: string;\n  USER_DATA = 'USER_DATA';\n  user: User;\n  imageSrc = 'assets/images/default.png';\n  updatedImage = '';\n  constructor(private formBuilder: FormBuilder, @Inject(SESSION_STORAGE) private storageService: StorageService\n  ) {\n    this.sharePhoto = this.formBuilder.group({\n      'photo_path': ['', [Validators.required]],\n      'photo_caption': ['', [Validators.required]],\n      'photo_location': ['', [Validators.required]],\n      'upload_date': ['', Validators.required],\n    });\n    this.user = this.storageService.get(this.USER_DATA);\n  }\n  ngOnInit() {\n    this.user = this.storageService.get(this.USER_DATA);\n  }\n  uploadImage(updatedImage) {\n    console.log(updatedImage);\n  }\n\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n}\n","<img src=\"assets/images/blogfront.png\" style=\"width: 100%;height: 300px;\">\n<mat-tab-group class=\"demo-tab-group\">\n  <mat-tab label=\"Basic details\">\n    <div class=\"tab-content\">\n      <br/>\n      <div>\n        <img mat-card-image [src]=\"imageSrc\" style=\"border-radius: 50%;max-width:200px;max-height:150px;\" />\n        <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\" />\n        <button mat-button (click)=\"uploadImage(imageSrc)\">Update </button>\n      </div>\n\n      <br /> Profile <br /> <a href=\"http://writerhub/pranaysmokal\">http://writerhub/{{user.username}} </a><br />\n      <br /> Name <br />\n      <h3> {{ user.firstName + \" \" + user.lastName }} </h3><br />\n      <br /> Username <br />\n      <h3> {{user.username}} </h3><br />\n      Contact Number <br /> {{user.contact}} <br />\n      <br /> Email <br> {{user.email}} <br />\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Post\">\n    <!-- <form>\n      <mat-form-field style=\"width: 50%;\">\n        <textarea matInput class=\"form-control\" placeholder=\"Share Something!!\" formControlName=\"photo_caption\" rows=\"5\"></textarea>\n      </mat-form-field><br />\n      <mat-slide-toggle matInput class=\"form-control\" formControlName=\"photo_location\" style=\"margin-left: 10px;\">Share\n        location</mat-slide-toggle>\n      <button matInput class=\"form-control\" mat-raised-button style=\"margin-left: 10px;\">Upload Photo</button>\n      <button matInput class=\"form-control\" mat-raised-button color=\"primary\" style=\"margin-left: 10px;\">Share</button>\n    </form>-->\n    <br />\n  </mat-tab>\n  <mat-tab label=\"My Blogs\">\n    these are the blogs\n  </mat-tab>\n  <mat-tab label=\"Photos\">\n    <div class=\"tab-content\">\n\n      <mat-grid-list style=\"margin-top: 100px;\" cols=\"2\" rowHeight=\"2:1\">\n        <mat-grid-tile>\n          <mat-card class=\"photoshares\">\n            <mat-card-header>\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-card-title>\n                <mat-menu #menu=\"matMenu\" layout-align=\"end center\">\n                  <button mat-menu-item>\n                    <mat-icon>share</mat-icon>\n                    <span>Share</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>voicemail</mat-icon>\n                    <span>Hide</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete</span>\n                  </button>\n                </mat-menu>\n              </mat-card-title>\n            </mat-card-header>\n            <img mat-card-mat-image src=\"assets/images/developer/pranaymokal.png\" stype=\"height:300px;width:200px;\">\n            <mat-card-actions>\n              <button mat-button>\n                <mat-icon>thumb_up</mat-icon>Like\n              </button>\n              <button mat-button>\n                <mat-icon>thumb_down</mat-icon>Dislike\n              </button>\n              <button mat-button>\n                <mat-icon>comment</mat-icon>Comment\n              </button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <mat-card class=\"photoshares\">\n            <mat-card-header>\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-card-title>\n                <mat-menu #menu=\"matMenu\" layout-align=\"end center\">\n                  <button mat-menu-item>\n                    <mat-icon>share</mat-icon>\n                    <span>Share</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>voicemail</mat-icon>\n                    <span>Hide</span>\n                  </button>\n                  <button mat-menu-item>\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete</span>\n                  </button>\n                </mat-menu>\n              </mat-card-title>\n            </mat-card-header>\n            <img mat-card-mat-image src=\"assets/images/developer/pranaymokal.png\" stype=\"height:300px;width:200px;\">\n            <mat-card-actions>\n              <button mat-button>\n                <mat-icon>thumb_up</mat-icon>Like\n              </button>\n              <button mat-button>\n                <mat-icon>thumb_down</mat-icon>Dislike\n              </button>\n              <button mat-button>\n                <mat-icon>comment</mat-icon>Comment\n              </button>\n            </mat-card-actions>\n          </mat-card>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <br />\n\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Recent likes\">\n    This tab is about likes!\n  </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BlogsService } from './../../services/blogs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport {User} from '../../appcore/models/user.model';\nimport { RecepiesService } from '../../services/recepies.service';\n\n\n@Component({\n  selector: 'app-create-recepie',\n  templateUrl: './create-recepie.component.html',\n  styleUrls: ['./create-recepie.component.css']\n})\nexport class CreateRecepieComponent implements OnInit {\n\n  createRecepie: FormGroup;\n  @ViewChild('form') ngForm;\n  error: string;\n  imageSrc = '';\n  user: User;\n  model = { recepieName: '',\n  recepieState: '',\n  recepieImage: '',\n  recepieCategory : '',\n  recepieContent : '',\n  recepieTags : '',\n  };\n\n  categories = [\n    { value: 'drink', viewValue: 'Drink' },\n    { value: 'vegitarian', viewValue: 'Vegitarian' },\n    { value: 'non-vegitarian', viewValue: 'Non Vegitarion' },\n    { value: 'sea-food', viewValue: 'Sea Food' },\n    { value: 'curry', viewValue: 'curry' },\n    { value: 'chicken', viewValue: 'Chicken' },\n    { value: 'cakes', viewValue: 'Cakes' },\n    { value: 'cookies', viewValue: 'Cookies' },\n    { value: 'other', viewValue: 'Other' }\n  ];\n\n  constructor(private recepieService: RecepiesService,\n    private formBuilder: FormBuilder, private router: Router,@Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.createRecepie = this.formBuilder.group({\n      'recepieName': ['', [Validators.required]],\n      'recepieContent': ['', [Validators.required]],\n      'recepieTags': ['', Validators.required],\n      'recepieCategory': ['', Validators.required],\n      'recepieImage': [''],\n    });\n  }\n\n  createNewRecepie(newRecepie) {\n    newRecepie.recepieImage = this.imageSrc;\n    newRecepie.recepieState = 'created';\n    this.user = this.storageService.get('USER_DATA');\n    newRecepie.recepieAuthor = this.user.firstName + ' ' + this.user.lastName;\n    this.recepieService.addRecepie(newRecepie).subscribe((blogs) => {\n      this.router.navigate(['/recepies']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if(response.status === 201){\n        this.router.navigate(['/recepies']);\n      }\n    });\n  }\n  \n  publishRecepie(model) {\n    model.recepieImage = this.imageSrc;\n    model.recepieState = 'published';\n    this.recepieService.addRecepie(model).subscribe((recepies) => {\n      this.router.navigate(['/recepies']);\n    }, (response) => {\n      if (response.status === 500) {\n        this.error = 'errorHasOcurred';\n      }\n      if (response.status === 201) {\n        this.router.navigate(['/recepies']);\n      }\n    });\n  }\n  handleInputChange(e) {\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n    const pattern = /image-*/;\n    const reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n\n  _handleReaderLoaded(e) {\n    const reader = e.target;\n    this.imageSrc = reader.result;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\">\n      <h1>{{ \"addrecepie\" | translate }}</h1>\n    </mat-toolbar>\n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"createRecepie\" #form=\"ngForm\" (ngSubmit)=\"createNewRecepie(createRecepie.value)\">\n          <mat-form-field class=\"input-field\">\n            <input matInput class=\"form-control\" placeholder=\"{{'recepiename' | translate}}\" formControlName=\"recepieName\" [(ngModel)]=\"model.recepieName\"/>\n          </mat-form-field>\n          <mat-form-field class=\"input-field\">\n            <mat-select placeholder=\"Blog categories\" placeholder=\"{{'recepiecategories' | translate}}\" formControlName=\"recepieCategory\" [(ngModel)]=\"model.recepieCategory\">\n              <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.value\">\n                {{ cat.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"input-field\">\n            <textarea matInput class=\"form-control\" placeholder=\"{{'writerecepieshere' | translate}}\" formControlName=\"recepieContent\" rows=\"20\" [(ngModel)]=\"model.recepieContent\" ></textarea>\n          </mat-form-field>\n  \n          <mat-form-field class=\"input-field\">\n            <input matInput placeholder=\"Add Tags\" formControlName=\"recepieTags\" [(ngModel)]=\"model.recepieTags\"/>\n          </mat-form-field>\n  \n          <div>\n            <img [src]=\"imageSrc\" style=\"max-width:300px;max-height:300px\" />\n            <input value=\"Upload Image\" name=\"imageUrl\" type=\"file\" accept=\"image/*\" (change)=\"handleInputChange($event)\"\n              formControlName=\"recepieImage\"/>\n          </div>\n  \n          <mat-card-actions>\n            <button type=\"submit\" mat-raised-button>{{ \"addrecepie\" | translate }}</button>\n            <button mat-raised-button (click)='publishRecepie(model)'>{{ \"publishrecepie\" | translate }}</button>\n          </mat-card-actions>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Recepie } from '../../appcore/models/recepie.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RecepiesService } from './../../services/recepies.service';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-recepie-detail',\n  templateUrl: './recepie-detail.component.html',\n  styleUrls: ['./recepie-detail.component.css']\n})\nexport class RecepieDetailComponent implements OnInit {\n  recepie: Recepie;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private recepieService: RecepiesService\n  ) {}\n\n  ngOnInit() {\n    const recepieDetail = this.recepieService.getRecepieById(\n      this.route.snapshot.paramMap.get('id')\n    );\n    recepieDetail.subscribe(res => {\n      this.recepie = res;\n    });\n  }\n\n}\n","  <div fxLayout=\"column wrap\" fxLayoutAlign=\"start\" fxFlex=\"100\" flex-wrap=\"nowrap\" *ngIf=\"recepie\">\n    <mat-card>\n      <mat-card-header fxLayout=\"row\">\n        <img class=\"mat-card-mat-image\" src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50 \" style=\"border-radius: 50%;\">\n        <div class=\"header-actions\" style=\"margin-left: 20px\">\n          <mat-card-title>{{ recepie.recepieName }}</mat-card-title>\n          <mat-card-subtitle>Author : {{ recepie.recepieAuthor }}</mat-card-subtitle>\n          <mat-card-subtitle>Posted on {{recepie.recepieCreated | date}}</mat-card-subtitle>\n        </div>\n        <div fxFlex></div>\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item>Share</button>\n          <button mat-menu-item>Hide</button>\n          <button mat-menu-item>Rate</button>\n        </mat-menu>\n          <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n      </mat-card-header>\n      <img src=\"{{recepie.recepieImage}}\" class=\"center\" height=\"350\" width=\"350\" style=\"margin-bottom: 20px;\">\n      <mat-card-content>\n      <pre  class=\"preclass\" style=\"text-justify: inter-word;margin-top: 40px;font-size:18px;\">\n           {{recepie.recepieContent}} </pre>\n      </mat-card-content>\n      <mat-card-footer>\n        <button mat-button matBadge=\"{{recepie.recepieLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n          <mat-icon>thumb_up</mat-icon>Like\n        </button>\n        <button mat-button matBadge=\"{{recepie.recepieDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n          <mat-icon>thumb_down</mat-icon>Dislike\n        </button>\n        <button class=\"mat-icon-button\" aria-label=\"toggle \">\n          <mat-icon mat-svg-icon=\"mat-toggle-arrow \"></mat-icon>\n          <button mat-button matBadge=\"{{recepie.recepieViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n        </button>\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Comments\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <form class=\"example-container\">\n            <mat-form-field>\n              <textarea matInput placeholder=\"Leave a comment\"></textarea>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" style=\"width: 100px;\">comment</button>\n          </form>\n        </mat-expansion-panel>\n      </mat-card-footer>\n    </mat-card>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Recepie } from '../../appcore/models/recepie.model';\nimport { RecepiesService } from './../../services/recepies.service';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-recepies',\n  templateUrl: './recepies.component.html',\n  styleUrls: ['./recepies.component.css']\n})\nexport class RecepiesComponent implements OnInit {\n\n  recepies: Recepie[];\n  recepieCount: Number = 0;\n  length = 0;\n  pageIndex = 0;\n  pageSize = 5;\n  pageEvent: PageEvent;\n  pageSizeOptions: number[] = [5, 10, 25, 50, 100];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private recepieService: RecepiesService,\n    @Inject(SESSION_STORAGE) private storageService: StorageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.getAllRecepies();\n  }\n\n  ngOnInit() {}\n\n  getAllRecepies(): void {\n    this.recepieService.getAllRecepies().subscribe(\n      recepieList => {\n        this.recepieCount = recepieList.length;\n        this.recepies = recepieList;\n      },\n      error => {\n      }\n    );\n  }\n\n  readRecepie(recepieId: string) {\n    this.router.navigate(['/recepie/' + recepieId]);\n  }\n\n  pageChange($event) {\n    const startIndex = $event.pageIndex * $event.pageSize;\n    let endIndex = 0;\n    if ($event.previousPageIndex < $event.pageIndex) {\n      endIndex = $event.pageSize + $event.pageSize;\n    } else {\n      endIndex = $event.pageSize;\n    }\n    this.recepies = this.recepies.slice(startIndex, endIndex);\n  }\n\n}\n","<img src=\"assets/images/food.png\" style=\"width:100%;height:300px;margin-bottom: 20px;\"/>\n<div *ngIf=\"recepies\">\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\" fxLayoutAlign=\"flex-start\">\n    <ng-container *ngFor=\"let recepie of recepies\">\n      <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <img src=\"assets/images/developer/pranaymokal.png\" width=\"50\" height=\"50\" style=\"border-radius:50%\" />\n          </div>\n          <mat-card-title>{{ recepie.recepieName }}</mat-card-title>\n          <mat-card-subtitle>Author : {{ recepie.recepieAuthor }}</mat-card-subtitle>\n          <mat-card-subtitle>Posted on {{ recepie.recepieCreated | date}} <mat-chip color=\"primary\" selected>{{recepie.recepieCategory}}</mat-chip>\n          </mat-card-subtitle>\n          <div fxFlex></div>\n          <mat-menu #appMenu=\"matMenu\">\n              <button mat-menu-item>Share</button>\n              <button mat-menu-item>Hide</button>\n              <button mat-menu-item>Rate</button>\n            </mat-menu>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n              <mat-icon>more_vert</mat-icon>\n          </button>\n\n        </mat-card-header>\n        <img class=\"mat-card-image\" src=\"{{recepie.recepieImage}}\"  height=\"300\"/>\n\n        <mat-card-content style=\"height: 60px;overflow: hidden;\">\n          <p>{{ recepie.recepieContent }}</p>\n        </mat-card-content>\n        <mat-card-footer>\n            <button mat-button matBadge=\"{{recepie.recepieLikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"primary\">\n                <mat-icon>thumb_up</mat-icon>Like\n            </button>\n            <button mat-button matBadge=\"{{recepie.recepieDislikes}}\" matBadgePosition=\"above after\" matBadgeColor=\"warn\">\n                <mat-icon>thumb_down</mat-icon>Dislike\n          </button>\n          <button mat-button matBadge=\"{{recepie.recepieViews}}\" matBadgePosition=\"after\" matBadgeColor=\"accent\"> Views</button>\n          <button mat-button (click)=\"readRecepie(recepie._id)\">Read More..</button>\n        </mat-card-footer>\n      </mat-card>\n    </ng-container>\n  </div>\n\n  <mat-paginator *ngIf=\"recepies\" [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100] \">\n  </mat-paginator>\n</div>\n","import { AlertService } from './../services/alert.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserService } from '../services/user.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  model: any = {};\n  loading = false;\n  newRegisterForm: FormGroup;\n  error: string;\n  isCreated = false;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private translator: TranslateService,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {\n\n    this.newRegisterForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      confirmpassword: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      contact: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n    });\n  }\n\n  registerUser(newRegisterForm) {\n    if(this.newRegisterForm.invalid){\n      return;\n    }\n    this.userService.create(newRegisterForm).subscribe(\n      data => {\n        this.router.navigate(['/login']);\n        this.alertService.showToaster('Registration successful');\n      },\n      error => {\n        this.alertService.showToaster(error);\n        this.loading = false;\n      }\n    );\n  }\n}\n","<div class=\"form-container\">\n    <mat-toolbar color=\"primary\"> {{ \"signup\" | translate }} </mat-toolbar>\n    <mat-card>\n        <mat-card-content>\n            <form [formGroup]=\"newRegisterForm\" #form=\"ngForm\" (ngSubmit)=\"registerUser(newRegisterForm.value)\">\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'firstname' | translate }}\"\n                        formControlName=\"firstName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'lastname' | translate }}\" formControlName=\"lastName\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"text\" placeholder=\"{{ 'username' | translate }}\" formControlName=\"username\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"email\" placeholder=\"{{ 'email' | translate }}\" formControlName=\"email\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"number\" placeholder=\"{{ 'mobile' | translate }}\" formControlName=\"contact\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'password' | translate }}\"\n                        formControlName=\"password\" />\n                </mat-form-field>\n                <mat-form-field class=\"input-field\">\n                    <input matInput type=\"password\" placeholder=\"{{ 'confirmpassword' | translate }}\"\n                        formControlName=\"confirmpassword\" />\n                </mat-form-field>\n                <mat-card-actions>\n                    <button mat-raised-button class=\"input-button\" color=\"accent\" type=\"reset\">\n                        {{ \"reset\" | translate }}\n                    </button>\n                    <button mat-raised-button class=\"input-button\" color=\"primary\" type=\"submit\">\n                        {{ \"signup\" | translate }}\n                    </button>\n                </mat-card-actions>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class AlertService {\n    horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n    verticalPosition: MatSnackBarVerticalPosition = 'top';\n  \n\n    constructor(private snackBar: MatSnackBar) {\n    }\n\n    showToaster(msg: string) {\n        this.snackBar.open(msg, null, {\n            duration: 3000,\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,      \n        });\n    }\n\n}\n","import { Dislike } from './../appcore/models/dislike.model';\nimport { Like } from './../appcore/models/like.model';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Blog } from '../../app/appcore/models/blog.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { Comment } from '../../app/appcore/models/comment.model';\n\n@Injectable()\nexport class BlogsService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private blogs: Blog[];\n  private blog: Blog;\n  private token: string;\n  private secureheaders: HttpHeaders;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllblogs(): Observable<Blog[]> {\n    return this.http.get<Blog[]>(AppConfig.appRestPoints.blogs, { headers: this.headers }).pipe(\n      map(response => response));\n  }\n\n  getBlogById(blogId: string): Observable<Blog> {\n    return this.http.get<Blog>(AppConfig.appRestPoints.blogs + '/' + blogId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  getCommentsByBlogId(blogId: string): Observable<Comment[]> {\n    return this.http.get<Comment[]>(AppConfig.appRestPoints.comments + '/blog/' + blogId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  like(blogId: string, isLiked: boolean): Observable<Like> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of(new Like(0, 'please sign in to like')\n      );\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Like>(AppConfig.appRestPoints.blogs + '/' + blogId + '/like', JSON.stringify({ isLiked: isLiked }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  dislike(blogId: string, disLiked: boolean): Observable<Dislike> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of(new Dislike(0, 'please sign in to Dislike'));\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Dislike>(AppConfig.appRestPoints.blogs + '/' + blogId + '/dislike', JSON.stringify({ isDisLiked: disLiked }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  createBlog(blog: any): Observable<Blog> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Blog>(AppConfig.appRestPoints.blogs + '/create', JSON.stringify({\n          blogName: blog.blogName,\n          blogContent: blog.blogContent,\n          blogCategory: blog.blogCategory,\n          blogAuthor: blog.blogAuthor,\n          blogTags: [blog.blogTags],\n          blogImage: blog.blogImage\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Blog Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  addCommentOnBlog(comment: Comment): Observable<string> {\n    this.token = this.storageService.get('USER_TOKEN');\n    if (!this.token) {\n      return of('please sign in to Comment');\n    }\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<string>(AppConfig.appRestPoints.comments + '/create', JSON.stringify({\n          commentText: comment.commentText,\n          commentAuthor: comment.commentAuthor,\n          blogId: comment.blogId,\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class CommunicatorService {\n    public isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n}\n","import { MyEvent } from '../appcore/models/myevent.model';\nimport { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class EventService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private events: MyEvent[];\n  private event: MyEvent;\n  private token: string;\n  private secureheaders: HttpHeaders;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllMyEvents(): Observable<MyEvent[]> {\n    return this.http.get<MyEvent[]>(AppConfig.appRestPoints.events).pipe(\n      map(response => response));\n  }\n\n  getMyEventById(MyEventId: string): Observable<MyEvent> {\n    return this.http.get<MyEvent>(AppConfig.appRestPoints.events + '/' + MyEventId)\n      .pipe(map(response => response));\n  }\n\n  createMyEvent(event: any): Observable<MyEvent> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': (this.token || '') });\n    try {\n      return this.http\n        .post<MyEvent>(AppConfig.appRestPoints.events + '/create', JSON.stringify({\n          eventName: event.eventName,\n          eventDescription: event.eventDescription,\n          eventLocation: event.eventLocation,\n          eventOrganizer: event.eventOrganizer,\n          eventImage: event.eventImage,\n          eventStartDate: event.eventStartDate,\n          eventEndDate: event.eventEndDate,\n          eventLikes: event.eventLikes,\n          eventDislikes: event.eventDislikes\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Event Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Feedback } from '../appcore/models/feedback.model';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class FeedbackService {\n  headers: HttpHeaders;\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) { }\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  getAllFeedbacks(): Observable<Feedback[]> {\n    return this.http.get<Feedback[]>(AppConfig.appRestPoints.feedbacks).pipe(\n      map(response => response));\n  }\n\n  getFeedbackById(feedbackId: string): Observable<Feedback> {\n    return this.http.get<Feedback>(AppConfig.appRestPoints.feedbacks + '/' + feedbackId)\n      .pipe(map(response => response));\n  }\n\n  sendFeedback(feedback: any): Observable<Feedback> {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    try {\n      return this.http\n        .post<Feedback>(AppConfig.appRestPoints.feedbacks + '/create', JSON.stringify({\n          senderName: feedback.senderName,\n          senderEmail: feedback.senderEmail,\n          senderFeedback: feedback.senderFeedback,\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Feedback sent sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(name, 'OK', config);\n  }\n\n\n}\n","\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { News } from './../appcore/models/news.model';\nimport { AppConfig } from '../config/app.config';\n\n\n@Injectable()\nexport class NewsService {\n  private headers: HttpHeaders;\n  private newsUrl: string;\n  private newsUpdated: string;\n  constructor(private http: HttpClient) {\n    this.newsUrl = AppConfig.appRestPoints.news;\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  }\n\n  getAllNews(country: String, category: String): Observable<News[]> {\n    try {\n      if (country) {\n        this.newsUpdated = this.newsUrl + 'in' + AppConfig.appRestPoints.newsapi;\n      }\n      else if (category) {\n        this.newsUpdated = this.newsUrl + country + '&category=' + category + AppConfig.appRestPoints.newsapi;\n      } else {\n        this.newsUpdated = this.newsUrl + country + '&category=' + category + AppConfig.appRestPoints.newsapi;\n      }\n      return this.http.get<{ articles: News[] }>(this.newsUpdated).pipe(\n        map(response => response.articles));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n\n  getAllNewsBySource(source: String): Observable<News[]> {\n    try {\n\n      this.newsUpdated = 'https://newsapi.org/v2/top-headlines?sources=' + source + AppConfig.appRestPoints.newsapi;\n      return this.http.get<{ articles: News[] }>(this.newsUpdated).pipe(\n        map(response => response.articles));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  private handleError(error: any) {\n    return observableThrowError(error || 'backend server error');\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from '../config/app.config';\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\nimport { Recepie } from '../../app/appcore/models/recepie.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class RecepiesService {\n  private headers: HttpHeaders;\n  private translations: any;\n  private token: string;\n\n  private handleError(error: any) {\n    if (error instanceof Response) {\n      return observableThrowError(error.json()['error'] || 'backend server error');\n    }\n    return observableThrowError(error || 'backend server error');\n  }\n\n  constructor(private http: HttpClient,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json'/*, 'x-access-token': this.token*/ });\n  }\n\n  getAllRecepies(): Observable<Recepie[]> {\n    return this.http.get<Recepie[]>(AppConfig.appRestPoints.recepies, { headers: this.headers }).pipe(\n      map(response => response));\n  }\n\n  getRecepieById(recepieId: string): Observable<Recepie> {\n    return this.http.get<Recepie>(AppConfig.appRestPoints.recepies + '/' + recepieId, { headers: this.headers })\n      .pipe(map(response => response));\n  }\n\n  addRecepie(recepie: any): Observable<Recepie> {\n    this.token = this.storageService.get('USER_TOKEN');\n    this.headers = new HttpHeaders({ 'Content-Type': 'application/json', 'x-access-token': this.token });\n    try {\n      return this.http\n        .post<Recepie>(AppConfig.appRestPoints.recepies + '/create', JSON.stringify({\n          recepieName: recepie.recepieName,\n          recepieContent: recepie.recepieContent,\n          recepieCategory: recepie.recepieCategory,\n          recepieAuthor: recepie.recepieAuthor,\n          recepieImage: recepie.recepieImage,\n          recepieViews: 0,\n          recepieLikes: 0,\n          recepieDislikes: 0,\n          recepieTags: recepie.recepieTags\n        }), { headers: this.headers }).pipe(\n          map(response => {\n            this.showSnackBar('Recepie Created Sucessfully');\n            return response;\n          }));\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  showSnackBar(name): void {\n    const config: any = new MatSnackBarConfig();\n    config.duration = AppConfig.snackBarDuration;\n    this.snackBar.open(this.translations[name], 'OK', config);\n  }\n}\n","\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { RequestOptions, Http, Headers, Response } from '@angular/http';\nimport { User } from '../appcore/models/user.model';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { Inject, Injectable } from '@angular/core';\nimport { AppConfig } from '../config/app.config';\n\n\n@Injectable()\nexport class UserService {\n    private headers: HttpHeaders;\n    private user_key = 'USER_DATA';\n    private storedUser: User;\n    constructor(private http: Http, @Inject(SESSION_STORAGE) private storageService: StorageService) {\n    }\n\n    getAll() {\n        return this.http.get(AppConfig.appRestPoints.users).pipe(map((response: Response) => response));\n    }\n\n    getById(id: string) {\n        return this.http.get(AppConfig.appRestPoints.users + '/' + id).pipe(map((response: Response) => response));\n    }\n\n    login(user: User) {\n        return this.http.post(AppConfig.appRestPoints.login, user).pipe(map((response: Response) => response));\n    }\n\n    create(user: User) {\n        return this.http.post(AppConfig.appRestPoints.register, user).pipe(map((response: Response) => response));\n    }\n\n    update(user: User) {\n        return this.http.put(AppConfig.appRestPoints.users + '/' + user._id, user).pipe(map((response: Response) => response));\n    }\n\n    delete(id: string) {\n        return this.http.delete(AppConfig.appRestPoints.users + '/' + id).pipe(map((response: Response) => response));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  settings = [\n    {\n      'name': 'Privacy policy',\n      'description': 'Privacy policies for user',\n      'icon': 'privacy',\n    },\n    {\n      'name': 'Language',\n      'description': 'Select Language',\n      'icon': 'language',\n    },\n    {\n      'name': 'Security',\n      'description': 'Security Options',\n      'icon': 'security',\n    },\n    {\n      'name': 'Reset Password',\n      'description': 'Reset Password',\n      'icon': 'password',\n    },\n    {\n      'name': 'SMS/Email Notification',\n      'description': 'SMS/Email Notification',\n      'icon': 'notification',\n    },\n    {\n      'name': 'Block list',\n      'description': 'Block peoples',\n      'icon': 'block',\n    }\n  ];\n  constructor() { }\n  ngOnInit() { }\n}\n","<div fxLayout=\"column\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"32px\">\n  <mat-list *ngFor=\"let setting of settings\">\n    <mat-list-item>\n      <mat-card fxFlex=\"0 1 calc(33.3% - 32px)\" fxFlex.lt-md=\"0 1 calc(50% - 32px)\" fxFlex.lt-sm=\"100%\">\n        <mat-card-header>\n          <mat-card-title style=\"text-align: center;\">{{setting.name}}</mat-card-title>\n        </mat-card-header>\n        <mat-card-footer>\n          <mat-card-subtitle style=\"text-align: center;\">{{setting.description}}</mat-card-subtitle>\n        </mat-card-footer>\n      </mat-card>\n    </mat-list-item>\n  </mat-list>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}